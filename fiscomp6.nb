(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    253068,       6663]
NotebookOptionsPosition[    232813,       6003]
NotebookOutlinePosition[    235247,       6069]
CellTagsIndexPosition[    235137,       6063]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell["Elementos de Programa\[CCedilla]\[ATilde]o", "Title",
 CellChangeTimes->{{3.400314919362463*^9, 3.400314927585841*^9}}],

Cell["\<\

\
\>", "Author",
 CellChangeTimes->{3.40031493477533*^9},
 TextAlignment->Right],

Cell[CellGroupData[{

Cell["Fun\[CCedilla]\[OTilde]es", "Item",
 CellChangeTimes->{{3.40031487193823*^9, 3.400314900144488*^9}, 
   3.400314938732247*^9, {3.40031497515364*^9, 3.40031497661048*^9}, {
   3.400315147616952*^9, 3.400315150269192*^9}}],

Cell["Listas", "Item",
 CellChangeTimes->{{3.40031487193823*^9, 3.400314900144488*^9}, 
   3.400314938732247*^9, {3.40031497515364*^9, 3.40031497661048*^9}, {
   3.400315147616952*^9, 3.40031515252007*^9}}],

Cell["Programa\[CCedilla]\[ATilde]o Imperativa", "Item",
 CellChangeTimes->{{3.40031487193823*^9, 3.400314900144488*^9}, 
   3.400314938732247*^9, {3.40031497515364*^9, 3.40031497661048*^9}, {
   3.400315147616952*^9, 3.400315161508529*^9}}],

Cell["Programa\[CCedilla]\[ATilde]o Funcional", "Item",
 CellChangeTimes->{{3.40031487193823*^9, 3.400314900144488*^9}, 
   3.400314938732247*^9, {3.40031497515364*^9, 3.40031497661048*^9}, {
   3.400315147616952*^9, 3.400315170377189*^9}}],

Cell["Programa\[CCedilla]\[ATilde]o baseada em Padr\[OTilde]es", "Item",
 CellChangeTimes->{{3.40031487193823*^9, 3.400314900144488*^9}, 
   3.400314938732247*^9, {3.40031497515364*^9, 3.40031497661048*^9}, {
   3.400315147616952*^9, 3.400315181696897*^9}, {3.400315215424288*^9, 
   3.400315215442285*^9}}],

Cell["Recurs\[ATilde]o", "Item",
 CellChangeTimes->{{3.40031487193823*^9, 3.400314900144488*^9}, 
   3.400314938732247*^9, {3.40031497515364*^9, 3.40031497661048*^9}, {
   3.400315147616952*^9, 3.400315181696897*^9}, {3.400315215424288*^9, 
   3.400315234858891*^9}}],

Cell["\<\
Intera\[CCedilla]\[ATilde]o com o Sistema Operacional\
\>", "Item",
 CellChangeTimes->{{3.40031487193823*^9, 3.400314900144488*^9}, 
   3.400314938732247*^9, {3.40031497515364*^9, 3.40031497661048*^9}, {
   3.400315147616952*^9, 3.400315181696897*^9}, {3.400315215424288*^9, 
   3.400315260236264*^9}}],

Cell["\<\
Depura\[CCedilla]\[ATilde]o e An\[AAcute]lise dde Desempenho
\
\>", "Item",
 CellChangeTimes->{{3.40031487193823*^9, 3.400314900144488*^9}, 
   3.400314938732247*^9, {3.40031497515364*^9, 3.40031497661048*^9}, {
   3.400315147616952*^9, 3.400315181696897*^9}, {3.400315215424288*^9, 
   3.400315271664528*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Filosofia Basica", "Section"],

Cell["\<\

\t\[Bullet] Tudo s\[ATilde]o express\[OTilde]es
\t\[Bullet] Fun\[CCedilla]\[OTilde]es transformam express\[OTilde]es em \
express\[OTilde]es
\t\[Bullet] Integracao com Sistema Operacional, Java, C\
\>", "Text",
 CellChangeTimes->{{3.400315003090622*^9, 3.400315025358416*^9}, {
  3.400326762862277*^9, 3.400326763517806*^9}, {3.545471161606387*^9, 
  3.545471162912634*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Bibliografia", "Section"],

Cell[TextData[{
 "\n\[Bullet] Maeder, R. E. \"The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Programer\"\n\[Bullet] Maeder, R. E. \"The Mathematica Programer II\"\n\
\[Bullet] Wagner, D. B., \"Power Programming with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ": The kernel\"\n\[Bullet] Maeder, R. E. \"Computer Science with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\"\n\[Bullet] Vardi, I. \"Computational Recreations with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\"\n"
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Expressoes", "Section"],

Cell[TextData[{
 "\n",
 StyleBox["head[part1, part2, ...]\n\t",
  FontFamily->"Courier"],
 "Todas as express\[OTilde]es no ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " podem ser escritas utilizando apenas colchetes, \[AAcute]tomos e \
v\[IAcute]rgulas.\n\t\[CapitalAAcute]tomos:\n\t             - \
S\[IAcute]mbolos\n\t             - N\[UAcute]meros\n\t             - Strings"
}], "Text",
 CellChangeTimes->{{3.400326774006938*^9, 3.40032679932637*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Express\[OTilde]es", "Section",
 CellChangeTimes->{{3.400326803294187*^9, 3.400326804354289*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"2", "/", "3"}], ",", "\[Pi]", ",", "1.72", ",", 
    RowBox[{"a", "+", "b"}], ",", 
    RowBox[{"{", "Banana", "}"}], ",", "\[Alpha]"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "A", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FractionBox["2", "3"], ",", "\[Pi]", ",", "1.72`", ",", 
   RowBox[{"a", "+", "b"}], ",", 
   RowBox[{"{", "Banana", "}"}], ",", "\[Alpha]"}], "}"}]], "Output"],

Cell[BoxData["List"], "Output"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Rational", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", "Pi", ",", "1.72`", ",", 
     RowBox[{"Plus", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"List", "[", "Banana", "]"}], ",", "\\[Alpha]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Fun\[CCedilla]\[OTilde]es", "Section",
 CellChangeTimes->{{3.400326810606145*^9, 3.400326812177083*^9}}],

Cell[TextData[{
 "\tExistem duas formas de atribuir um valor a um s\[IAcute]mbolo no ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ": ",
 StyleBox["=(Set) ",
  FontFamily->"Courier"],
 "e ",
 StyleBox[":= (SetDelayed).",
  FontFamily->"Courier"]
}], "Text",
 CellChangeTimes->{{3.400326818783852*^9, 3.40032681949241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xset", "=", 
   RowBox[{"b", "+", "c"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xdel", ":=", 
   RowBox[{"b", "+", "c"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"c", "=", 
  "3"}], "\[IndentingNewLine]", "xset", "\[IndentingNewLine]", "xdel"}], \
"Input"],

Cell[BoxData[
 RowBox[{"3", "+", "b"}]], "Output"],

Cell[BoxData["3"], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"c", "=", "4"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<xset= \>\"", ",", "xset"}], "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<xdel= \>\"", ",", "xdel"}], "]"}]}]}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Aplicando Fun\[CCedilla]\[OTilde]es", "Section",
 CellChangeTimes->{{3.400326828910481*^9, 3.400326830304287*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{Cell["", "Text"], "     ", "Forma", " ", "Covarde"}], 
  InlineCell]], "BilateralCell"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output"]
}, Open  ]],

Cell["\<\

    Mais Corajosa \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", " ", "@", " ", "x"}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output"]
}, Open  ]],

Cell["\<\

      Forma pos fixada\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "//", " ", "f"}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output"]
}, Open  ]],

Cell["      Um pouco mais interessante", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "~", "f", "~", "y"}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Definindo Fun\[CCedilla]\[OTilde]es", "Section",
 CellChangeTimes->{{3.400326844318493*^9, 3.400326845505128*^9}}],

Cell["\<\
     A maneira mais simples de definir uma fun\[CCedilla]\[ATilde]o e:\
\>", "Text",
 CellChangeTimes->{{3.400326850269011*^9, 3.400326852817088*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "+", "x"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "2", "]"}]], "Input"],

Cell[BoxData["4"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "a", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"2", " ", "a"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "\"\<bobo\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"2", " ", "\<\"bobo\"\>"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "\"\<bobo\>\"", "]"}], "//", "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Times", "[", 
    RowBox[{"2", ",", "\"\<bobo\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["O enigmatico significado do \"_\"", "Section"],

Cell[TextData[{
 "\n\tAs fun\[CCedilla]\[OTilde]es no ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " n\[ATilde]o s\[ATilde]o equivalentes as defini\[CCedilla]\[OTilde]es de \
fun\[CCedilla]\[ATilde]o na Matematica! No ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uma fun\[CCedilla]\[ATilde]o \[EAcute] uma opera\[CCedilla]\[ATilde]o de \
reconhecimento de padr\[OTilde]es!\n\tO \"_\" nos permite restringir o escopo \
de uma fun\[CCedilla]\[ATilde]o! "
}], "Text",
 CellChangeTimes->{{3.400326864378917*^9, 3.400326865530893*^9}, {
  3.400331247370529*^9, 3.400331290941692*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"freal", "[", "x_Real", "]"}], ":=", 
    RowBox[{"Exp", "[", "x", "]"}]}], " ", ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"So", " ", "para", " ", "Reais"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fint", "[", "x_Integer", "]"}], ":=", 
    RowBox[{"Exp", "[", "x", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Para", " ", "Inteiros"}], " ", "*)"}]}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fint", "[", "2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"freal", "[", "2.", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fint", "[", "2.", "]"}], "\[IndentingNewLine]", 
 RowBox[{"freal", "[", "2", "]"}]}], "Input"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "2"]], "Output"],

Cell[BoxData["7.38905609893065`"], "Output"],

Cell[BoxData[
 RowBox[{"fint", "[", "2.`", "]"}]], "Output"],

Cell[BoxData[
 RowBox[{"freal", "[", "2", "]"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Usos mais esotericos do \"_\"", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"feso", "[", 
   RowBox[{"x_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], "]"}], ":=", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"feso", "[", "2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"feso", "[", 
  RowBox[{"-", "2"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Cos", "[", "2", "]"}]], "Output"],

Cell[BoxData[
 RowBox[{"feso", "[", 
  RowBox[{"-", "2"}], "]"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Funcoes Puras", "Section"],

Cell[TextData[{
 "\n       Um usu\[AAcute]rio experiente do ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " n\[ATilde]o deve recorrer a forma anterior e covarde  de definir fun\
\[CCedilla]\[OTilde]es. Pois esta forma aumenta a legibilidade do Codigo! Uma \
forma muito mais ileg\[IAcute]vel e a seguinte:"
}], "Text",
 CellChangeTimes->{{3.400331308226142*^9, 3.400331327994002*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#", "^", "2"}], "+", "1"}], ")"}], "&"}], "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "5", ",", "10"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"g", ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#", "^", "2"}], "+", "1"}], ")"}], "&"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "//", "g"}]], "Input"],

Cell[BoxData[
 RowBox[{"1", "+", 
  SuperscriptBox["x", "2"]}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#1", "^", "2"}], "+", 
      RowBox[{"#2", "^", "3"}], "+", "2"}], ")"}], "&"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"2", "+", 
  SuperscriptBox["a", "2"], "+", 
  SuperscriptBox["b", "3"]}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Aumentando a divers\[ATilde]o", "Section",
 CellChangeTimes->{{3.400331340689398*^9, 3.400331341524288*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Trans", "[", 
   RowBox[{"func_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"func", "[", 
   RowBox[{"a", "+", "x"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trans", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}], ",", "a"}], "]"}]], "Input"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"a", "+", "x"}], ")"}], "2"]], "Output"]
}, Open  ]],

Cell["\<\

       Para desertores covardes tamb\[EAcute]m \[EAcute] poss\[IAcute]vel \
usar a forma mais leg\[IAcute]vel, mas menos po\[EAcute]tica:\
\>", "Text",
 CellChangeTimes->{{3.400331347408913*^9, 3.400331360662652*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Trans", "[", 
  RowBox[{"f", ",", "a"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   SuperscriptBox["x", "2"]}], "]"}]], "Output"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"a", "+", "x"}], ")"}], "2"]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Exerc\[IAcute]cio", "Section",
 CellChangeTimes->{{3.545471769266273*^9, 3.545471774714767*^9}}],

Cell[TextData[{
 "Construa uma fun\[CCedilla]\[ATilde]o que implemente rota\[CCedilla]\
\[OTilde]es em duas dimens\[OTilde]es e aplique isso para gerar \
gr\[AAcute]ficos rotacionados  da fun\[CCedilla]\[ATilde]o ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}]}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{
      SuperscriptBox["y", "2"], "."}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.5454717779851723`*^9, 3.545471931891138*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Aplicando Restri\[CCedilla]\[OTilde]es", "Section",
 CellChangeTimes->{{3.400331368402449*^9, 3.400331369843971*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{"1", " ", "/;", " ", 
   RowBox[{"x", "<", "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{"2", "/;", " ", 
   RowBox[{
    RowBox[{"x", ">=", "1"}], " ", "&&", " ", 
    RowBox[{"x", "<", "2"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{"3", "/;", " ", 
   RowBox[{"x", "\[GreaterEqual]", "2"}]}]}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.02", "]"}], "}"}]}]}], "]"}]], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.31746 -0.279587 0.294302 [
[.18254 .00222 -9 -9 ]
[.18254 .00222 9 0 ]
[.34127 .00222 -3 -9 ]
[.34127 .00222 3 0 ]
[.5 .00222 -9 -9 ]
[.5 .00222 9 0 ]
[.65873 .00222 -3 -9 ]
[.65873 .00222 3 0 ]
[.81746 .00222 -9 -9 ]
[.81746 .00222 9 0 ]
[.97619 .00222 -3 -9 ]
[.97619 .00222 3 0 ]
[.01131 .16187 -18 -4.5 ]
[.01131 .16187 0 4.5 ]
[.01131 .30902 -6 -4.5 ]
[.01131 .30902 0 4.5 ]
[.01131 .45617 -18 -4.5 ]
[.01131 .45617 0 4.5 ]
[.01131 .60332 -6 -4.5 ]
[.01131 .60332 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.18254 .01472 m
.18254 .02097 L
s
[(0.5)] .18254 .00222 0 1 Mshowa
.34127 .01472 m
.34127 .02097 L
s
[(1)] .34127 .00222 0 1 Mshowa
.5 .01472 m
.5 .02097 L
s
[(1.5)] .5 .00222 0 1 Mshowa
.65873 .01472 m
.65873 .02097 L
s
[(2)] .65873 .00222 0 1 Mshowa
.81746 .01472 m
.81746 .02097 L
s
[(2.5)] .81746 .00222 0 1 Mshowa
.97619 .01472 m
.97619 .02097 L
s
[(3)] .97619 .00222 0 1 Mshowa
.125 Mabswid
.05556 .01472 m
.05556 .01847 L
s
.0873 .01472 m
.0873 .01847 L
s
.11905 .01472 m
.11905 .01847 L
s
.15079 .01472 m
.15079 .01847 L
s
.21429 .01472 m
.21429 .01847 L
s
.24603 .01472 m
.24603 .01847 L
s
.27778 .01472 m
.27778 .01847 L
s
.30952 .01472 m
.30952 .01847 L
s
.37302 .01472 m
.37302 .01847 L
s
.40476 .01472 m
.40476 .01847 L
s
.43651 .01472 m
.43651 .01847 L
s
.46825 .01472 m
.46825 .01847 L
s
.53175 .01472 m
.53175 .01847 L
s
.56349 .01472 m
.56349 .01847 L
s
.59524 .01472 m
.59524 .01847 L
s
.62698 .01472 m
.62698 .01847 L
s
.69048 .01472 m
.69048 .01847 L
s
.72222 .01472 m
.72222 .01847 L
s
.75397 .01472 m
.75397 .01847 L
s
.78571 .01472 m
.78571 .01847 L
s
.84921 .01472 m
.84921 .01847 L
s
.88095 .01472 m
.88095 .01847 L
s
.9127 .01472 m
.9127 .01847 L
s
.94444 .01472 m
.94444 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
.02381 .16187 m
.03006 .16187 L
s
[(1.5)] .01131 .16187 1 0 Mshowa
.02381 .30902 m
.03006 .30902 L
s
[(2)] .01131 .30902 1 0 Mshowa
.02381 .45617 m
.03006 .45617 L
s
[(2.5)] .01131 .45617 1 0 Mshowa
.02381 .60332 m
.03006 .60332 L
s
[(3)] .01131 .60332 1 0 Mshowa
.125 Mabswid
.02381 .04415 m
.02756 .04415 L
s
.02381 .07358 m
.02756 .07358 L
s
.02381 .10301 m
.02756 .10301 L
s
.02381 .13244 m
.02756 .13244 L
s
.02381 .1913 m
.02756 .1913 L
s
.02381 .22073 m
.02756 .22073 L
s
.02381 .25016 m
.02756 .25016 L
s
.02381 .27959 m
.02756 .27959 L
s
.02381 .33845 m
.02756 .33845 L
s
.02381 .36788 m
.02756 .36788 L
s
.02381 .39731 m
.02756 .39731 L
s
.02381 .42674 m
.02756 .42674 L
s
.02381 .4856 m
.02756 .4856 L
s
.02381 .51503 m
.02756 .51503 L
s
.02381 .54446 m
.02756 .54446 L
s
.02381 .57389 m
.02756 .57389 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.02 w
.02381 .01472 m
.06244 .01472 L
.10458 .01472 L
.14415 .01472 L
.18221 .01472 L
.22272 .01472 L
.26171 .01472 L
.28158 .01472 L
.30316 .01472 L
.31323 .01472 L
.32392 .01472 L
.33304 .01472 L
.33554 .01472 L
.33823 .01472 L
.33953 .01472 L
.34076 .01472 L
.34187 .30902 L
.34309 .30902 L
.38373 .30902 L
.42286 .30902 L
.46444 .30902 L
.50451 .30902 L
.54306 .30902 L
.58406 .30902 L
.60448 .30902 L
.62355 .30902 L
.64188 .30902 L
.64715 .30902 L
.65215 .30902 L
.65433 .30902 L
.65664 .30902 L
.65785 .30902 L
.65853 .30902 L
.65918 .60332 L
.66031 .60332 L
.66152 .60332 L
.70266 .60332 L
.74229 .60332 L
.78039 .60332 L
.82096 .60332 L
.86 .60332 L
.9015 .60332 L
.94148 .60332 L
.97619 .60332 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 177.938},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 
  1}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztWM1OwkAQ3paWH//QGM+2oEbfQF9ATx7kSLk0xAQORoM8lB7VB0RmCt2F
/dpsEbGSbcjuZPhmdubb7e5s7+Px4PEpHg/7cXA3il8Gw/5rcPs8mqoqjhBO
IIT4CATJk6k4aybT3ySkhjRSvqHOJYjHiopI4IwRLrWsapHkkRSmUiXXor2a
BcdSS4K75s5bgE+fXeAlBLoW0O0AXWBouwd0pzjE6kYTMLVF4yKclxt9PZ2w
M0N/tdTivLCF6aKoAy+F4lvSXRjaVoEOZWnAKRpNvnwsNQCujV2GBUfKXMQn
WSvOTSPy0pkyZVtauIuS9NdannkUCLcJK+KYui79+6UoIlJ8JoomdZzbETXO
MgxNJtL5a8b9R9vNjaFM0CUAXQEdwiGdn72yHqj1lcVTWhC/I50yRFJGkGXH
smPZYdCs/p4/nF1+SY42as0tcoHKVHftzlhl5KL285RQlWjkbF77yQeVcT+L
iysmdIX76zW3je+RZceyUxLQlrGzT13+Xsb3gJ4CN91He6SJEsMDAOIR5Ymi
wpsAjrZizfAQgNAx2Ekzi9TMtCs5YuUtJVFNjhcG4kKDo4n5bRBH916GSMoI
suxYdiw7DFrPlSXPLfXoHEHbtOYHgdBXdhme5qL4bUVzgU4F089uOjX+AjVz
GX03NvLnpqtSfto1Osbs21M2kGXHsmPZYZBBjR3JfwuX86pt5h1CnicqvGBk
pjcUnrruailx2zAJT0UK5xtKUfri\
\>"],ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-0.248956, 0.84506, \
0.0115854, 0.012497}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Exerc\[IAcute]cios", "Section",
 CellChangeTimes->{{3.545471952666127*^9, 3.545471957036171*^9}}],

Cell["\<\
Implemente uma fun\[CCedilla]\[ATilde]o que calcula o IR de um assalariado \
brasileiro com uma \[UAcute]nica fonte de renda. \
\>", "Text",
 CellChangeTimes->{{3.545471958973028*^9, 3.545472012125246*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Programa\[CCedilla]\[ATilde]o Imperativa", "Section",
 CellChangeTimes->{{3.400315362767951*^9, 3.400315373136172*^9}}],

Cell["\<\

                    A programa\[CCedilla]\[ATilde]o imperativa \[EAcute] \
aquela utilizada em linguagens como C e Fortran. Al\[EAcute]m dos comandos de \
atribui\[CCedilla]\[ATilde]o estas linguagens incluem comandos para lidar com \
processamento repetitivo. Para ilustrar estas t\[EAcute]cnicas vou atacar um \
problema trivial: determinar se um n\[UAcute]mero \[EAcute] primo.\
\>", "Text",
 CellChangeTimes->{{3.400315386302837*^9, 3.400315534768364*^9}, 
   3.400331474850423*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Vergonhasemente", " ", "Burro"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"num", "=", "2007"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"num", "/", "i"}], "]"}], "\[Equal]", 
        RowBox[{"num", "/", "i"}]}], ",", " ", 
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"i", ",", "\"\<N\[ATilde]o Primo\>\""}], "}"}], "]"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"num", "-", "1"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.400315536906361*^9, 3.400315625952214*^9}, {
  3.400315898821713*^9, 3.400315946442729*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Melhor", " ", "usando", " ", "For"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"num", "=", "13"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "2"}], ",", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{"num", "/", "i"}], "]"}], "!=", 
       RowBox[{"num", "/", "i"}]}], ",", 
      RowBox[{"i", "++"}], ","}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"i", "\[Equal]", "num"}], ",", 
     RowBox[{"Print", "[", "\"\<Primo\>\"", "]"}], ",", 
     RowBox[{"Print", "[", "\"\<N\[ATilde]o Primo\>\"", "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.400316784194155*^9, 3.400316877345297*^9}, {
  3.400317065973876*^9, 3.400317192381568*^9}, {3.400317236996149*^9, 
  3.40031724330272*^9}, {3.400331491052458*^9, 3.400331495020616*^9}}],

Cell[BoxData["\<\"Primo\"\>"], "Print",
 CellChangeTimes->{{3.40031708976314*^9, 3.40031719325494*^9}, 
   3.400317244086509*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Usando", " ", "While"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"num", "=", "13"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "<", 
        RowBox[{"num", "-", "1"}]}], ")"}], " ", "&&", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"num", "/", "i"}], "]"}], "!=", 
        RowBox[{"N", "[", 
         RowBox[{"num", "/", "i"}], "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "++"}], ";"}]}], "      ", "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"i", "\[Equal]", 
      RowBox[{"num", "-", "1"}]}], ",", 
     RowBox[{"Print", "[", "\"\<Primo\>\"", "]"}], ",", 
     RowBox[{"Print", "[", "\"\<N\[ATilde]o Primo\>\"", "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.400315950528816*^9, 3.400316071505824*^9}, {
  3.400316130178732*^9, 3.400316435346866*^9}, {3.400316468513017*^9, 
  3.400316512045397*^9}, {3.400316650703065*^9, 3.40031668164096*^9}, {
  3.400316948623423*^9, 3.400316949931433*^9}, {3.400317260879115*^9, 
  3.400317266771836*^9}}],

Cell[BoxData["\<\"Primo\"\>"], "Print",
 CellChangeTimes->{{3.400316418404761*^9, 3.400316436183606*^9}, {
   3.400316491126473*^9, 3.400316512921868*^9}, {3.40031666570744*^9, 
   3.40031668256644*^9}, 3.40031695022281*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Melhor", ",", " ", 
    RowBox[{
    "Usando", " ", "um", " ", "velho", " ", "e", " ", "conhecido", " ", 
     "teorema", " ", "da", " ", "Teoria", " ", "dos", " ", 
     "N\[UAcute]meros"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"num", "=", "13"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "<", 
        RowBox[{"Sqrt", "[", "num", "]"}]}], ")"}], " ", "&&", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"num", "/", "i"}], "]"}], "!=", 
        RowBox[{"N", "[", 
         RowBox[{"num", "/", "i"}], "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "++"}], ";"}]}], "      ", "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"i", "\[Equal]", 
      RowBox[{"Ceiling", "[", 
       RowBox[{"Sqrt", "[", "num", "]"}], "]"}]}], ",", 
     RowBox[{"Print", "[", "\"\<Primo\>\"", "]"}], ",", 
     RowBox[{"Print", "[", "\"\<N\[ATilde]o Primo\>\"", "]"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.400316688070443*^9, 3.400316748252825*^9}, {
  3.400316901769563*^9, 3.400316929066452*^9}, {3.400316976701436*^9, 
  3.400316998666767*^9}, {3.400317036844362*^9, 3.400317041223223*^9}}],

Cell[BoxData["\<\"Primo\"\>"], "Print",
 CellChangeTimes->{{3.400316733797862*^9, 3.400316753387393*^9}, {
   3.40031691740901*^9, 3.400316929356986*^9}, 3.400316979707839*^9, {
   3.400317037734548*^9, 3.400317042006693*^9}}]
}, Open  ]],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Exerc\[IAcute]cio", "Section",
 CellChangeTimes->{{3.545472079975531*^9, 3.5454720887772427`*^9}}],

Cell["\<\

Determine todos os elementos qu\[IAcute]micos que s\[ATilde]o mais abundantes \
no corpo humano que no Universo. Descubra qual \[EAcute] o elemento de menor \
n\[UAcute]mero at\[OHat]mico que satisfaz essa propriedade. 

Descubra qual \[EAcute] o elemento com maior n\[UAcute]mero at\[OHat]mico que \
n\[ATilde]o possui is\[OAcute]topos. \
\>", "Text",
 CellChangeTimes->{{3.545472091757078*^9, 3.545472109160912*^9}, {
  3.5454724479800787`*^9, 3.545472603081613*^9}, {3.578688663031252*^9, 
  3.578688663625924*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Programa\[CCedilla]\[ATilde]o Funcional", "Section",
 CellChangeTimes->{{3.400331504848096*^9, 3.400331505907479*^9}}],

Cell[TextData[{
 "\tA programacao Funcional no ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " \[EAcute] muito poderosa, mas tamb\[EAcute]m perigosa. Al\[EAcute]m de \
tornar os progrmas mais dif\[IAcute]ceis de modificar eventualmente pode \
causar perdas de desempenho  se mal utilizada. Mas \[EAcute] dif\[IAcute]cil \
resistir, com poucas linhas pode se realizar programas que custariam muitas \
linhas em outras formas de programa\[CCedilla]\[ATilde]o.\n"
}], "Text",
 CellChangeTimes->{{3.400331511297024*^9, 3.400331524909512*^9}, {
  3.400331584049495*^9, 3.400331606783086*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Map (Por Cada)", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", "ou", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#", "^", "2"}], "+", 
     RowBox[{"Cos", "[", "#", "]"}]}], ")"}], "&"}], "/@", "L1"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"6241", "+", 
    RowBox[{"Cos", "[", "79", "]"}]}], ",", 
   RowBox[{"7921", "+", 
    RowBox[{"Cos", "[", "89", "]"}]}], ",", 
   RowBox[{"121", "+", 
    RowBox[{"Cos", "[", "11", "]"}]}], ",", 
   RowBox[{"16129", "+", 
    RowBox[{"Cos", "[", "127", "]"}]}], ",", 
   RowBox[{"241081", "+", 
    RowBox[{"Cos", "[", "491", "]"}]}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Apply (Oba Oba)", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "@@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Output"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "\n      Lamentavelmente, apesar da aura m\[AAcute]gica que exala do comando \
",
 StyleBox["Apply",
  FontSlant->"Italic"],
 " ele \[EAcute] s\[OAcute] um comandinho chinelo. Vejamos:\n      "
}], "Text",
 CellChangeTimes->{{3.400331617011674*^9, 3.400331651055951*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullForm", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", 
  RowBox[{"f", "@@", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell["\<\

      Meio bobo. Mas ...\
\>", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["\"Por cada\" e \"Oba-oba\" juntos fazem a festa", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plus", " ", "@@", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "^", "2"}], "&"}], " ", "/@", "  ", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], ")"}]}], 
  " "}]], "Input"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "2"], "+", 
  SuperscriptBox["b", "2"], "+", 
  SuperscriptBox["c", "2"], "+", 
  SuperscriptBox["d", "2"]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Momentum", "[", 
    RowBox[{"n_Integer", ",", "L_List"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Plus", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "/@", " ", "L"}], ")"}]}], "/", 
     RowBox[{"Length", "[", "L", "]"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Momentum", "[", 
  RowBox[{"4", ",", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}]}], "]"}]}], "Input"],

Cell[BoxData["3383.5`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Plus", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "#", "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", " ", "Pi", ",", "0.01"}], "}"}]}], 
       "]"}]}], ")"}]}], ")"}], "*", "0.01"}]], "Input"],

Cell[BoxData["1.9999900283082466`"], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Exerc\[IAcute]cio", "Section",
 CellChangeTimes->{{3.545473834238936*^9, 3.545473841942131*^9}}],

Cell["\<\

Determine a m\[EAcute]dia e o desvio padr\[ATilde]o da raz\[ATilde]o entre n\
\[UAcute]mero at\[OHat]mico e massa dos elementos qu\[IAcute]micos. \
Represente graficamente esses valores com rela\[CCedilla]\[ATilde]o ao n\
\[UAcute]mero at\[OHat]mico.Selecione os elementos que possuem um valor alto \
e elementos com valores baixos. (Ou seja aqueles que desviam mais de um \
desvio padr\[ATilde]o do valor da m\[EAcute]dia. 

Calcule a taxa de varia\[CCedilla]\[ATilde]o m\[EAcute]dia dos valores das a\
\[CCedilla]\[OTilde]es do IBOVESPA. Selecione usando a mesma \
estrat\[EAcute]gia as com varia\[CCedilla]\[ATilde]o excepcional. \
\>", "Text",
 CellChangeTimes->{{3.545473844414853*^9, 3.545474139146422*^9}, {
   3.5454742239730883`*^9, 3.5454742969549503`*^9}, 3.54728968367752*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Variantes do Map e Apply", "Section"],

Cell[TextData[{
 "\tPara come\[CCedilla]o de conversa o ",
 StyleBox["Map ",
  FontFamily->"Courier"],
 "aceita um parametro a mais. "
}], "Text",
 CellChangeTimes->{{3.400331641824866*^9, 3.400331642275446*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LLouca", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"1", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", "LLouca"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", "LLouca", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", "LLouca", ",", "3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", "LLouca", ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}], "]"}]}], 
  "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "1", "]"}], ",", 
      RowBox[{"f", "[", "2", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "1", "]"}], ",", 
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "1", "]"}], ",", 
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "1", "]"}], ",", 
      RowBox[{"f", "[", "2", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "1", "]"}], ",", 
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", "1", "]"}], ",", 
         RowBox[{"f", "[", "2", "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "1", "]"}], ",", 
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", "1", "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"f", "[", "2", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  "}"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell[TextData[{
 "Variantes do ",
 StyleBox["Map",
  FontFamily->"Courier"],
 " e do ",
 StyleBox["Apply",
  FontFamily->"Courier"]
}], "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapAt", "[", 
  RowBox[{"f", ",", "LLouca", ",", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapIndexed", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"b", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"c", ",", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "A", ",", "\[Alpha]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "B", ",", "\[Beta]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "C", ",", "\[Chi]"}], "}"}]}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"A", ",", "B", ",", "C"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Chi]"}], "]"}]}], 
  "}"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Exerc\[IAcute]cio", "Section",
 CellChangeTimes->{{3.5454743487404118`*^9, 3.545474353063663*^9}}],

Cell[TextData[{
 "Considere uma vari\[AAcute]vel que pode assumir n valores diferentes. \
Implemente uma fun\[CCedilla]\[ATilde]o que determine a frequ\[EHat]ncia com \
que cada elemento aparece na \[OpenCurlyQuote]serie e avalie a entropia S=-\
\[Sum] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "i"], "log", " ", 
    SubscriptBox["p", 
     RowBox[{"i", " ", "."}]]}], TraditionalForm]]],
 "Defina 0 log 0=0. A fun\[CCedilla]\[ATilde]o deve ser gen\[EAcute]rica."
}], "Text",
 CellChangeTimes->{{3.545474355369973*^9, 3.54547460264819*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Se livrando das malditas chaves", "Section"],

Cell[TextData[{
 "\tAs chaves no ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " s\[ATilde]o extremamente importantes, mas eventualmente aparecem nos \
lugares mais inadequados. Da\[IAcute] temos que elimin\[AAcute]-las, usando \
alguns truques."
}], "Text",
 CellChangeTimes->{{3.400331693473064*^9, 3.400331707382045*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"LLouca", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flatten", "[", "LLouca", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Morte", " ", "as", " ", 
    RowBox[{"Chaves", " ", "!!"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Flatten", "[", 
  RowBox[{"LLouca", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Flatten", "[", 
  RowBox[{"LLouca", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FlattenAt", "[", 
  RowBox[{"LLouca", ",", "2"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "2", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"L", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Truque", " ", "de", " ", "1", " ", "Milhao", " ", "de", " ", "Dolares"}], 
   " ", "*)"}]}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\tAgora um truque mais dificil. ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fLouca", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"a", "*", "b"}], "+", "c"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LL", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fLouca", "[", "LL", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fLouca", "[", 
  RowBox[{"Sequence", "[", "LL", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fLouca", "[", 
   RowBox[{"Sequence", " ", "@@", " ", "LL"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Uauuu", " ", "!!"}], "!"}], "*)"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"fLouca", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Output"],

Cell[BoxData[
 RowBox[{"fLouca", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Output"],

Cell[BoxData["5"], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Coisas mais bizarras", "Section",
 CellChangeTimes->{{3.545475009865623*^9, 3.545475017179878*^9}}],

Cell[BoxData[
 RowBox[{"Outer", "[", 
  RowBox[{"List", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "a"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "c"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "a"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "c"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "a"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "c"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", "a"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "c"}], "}"}]}], "}"}]}], "}"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5454751205405073`*^9, 3.545475121230563*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Inner", "[", 
   RowBox[{"Plus", ",", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", "f", ",", "g"}], "}"}], ",", "Times"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.545475123892928*^9, 3.545475158222457*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "+", "e"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"b", "+", "f"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"c", "+", "g"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.5454751488250513`*^9, 3.5454751590474377`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.5454749904494467`*^9}],

Cell[CellGroupData[{

Cell["Substituicao de Padroes", "Section"],

Cell[TextData[{
 "\t\"... the underlying mechanism for implementing all other programming \
constructs\" \n\t\t\t\t\t\t\t\t\tR. Maeder\n\n\t O assunto \[EAcute] vasto e \
complexo, assim s\[OAcute] nos resta  concentrar na ponta do Iceberg. \
Infelizmente igualmente vasto e igualmente complexo.  \n\t A estrutura b\
\[AAcute]sica de um Padrao e:\t\n\t",
 StyleBox["Pattern_Head\n\t",
  FontFamily->"Courier"],
 "Padr\[OTilde]es podem ser substituidos por outros padroes",
 StyleBox["\n\t/. Padrao -> Substituicao ",
  FontFamily->"Courier"]
}], "Text",
 CellChangeTimes->{{3.400331733488682*^9, 3.400331750185471*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "/.", 
  RowBox[{"a", "\[Rule]", "1"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "b", ",", "c"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "c"}], "}"}]}], "}"}], "/.", 
  RowBox[{"a", "\[Rule]", "1"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "b", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "c"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "c"}], "}"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{"b", "\[Rule]", "2"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "c"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", "x"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "a", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x_", ",", "_"}], "}"}], "\[Rule]", "x"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "a", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"___", ",", "x_", ",", "___"}], "}"}], "\[Rule]", 
   "x"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], "+", 
   RowBox[{"g", "[", "x", "]"}]}], "/.", 
  RowBox[{"x_f", "\[Rule]", "a"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"a", "+", 
  RowBox[{"g", "[", "x", "]"}]}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"expr", "=", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"u", "-", "1"}], "]"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"u", "^", " ", "2"}], "-", "1"}], "]"}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "/.", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", "y_", "]"}]}], "\[Rule]", 
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Factor", "[", "y", "]"}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", "u"}]], 
  SqrtBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["u", "2"]}]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "/.", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", "y_", "]"}]}], ":>", 
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Factor", "[", "y", "]"}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", "u"}]], 
  SqrtBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "u"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "u"}], ")"}]}]]]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["// Substitui\[CCedilla]\[ATilde]o Recursiva", "Section",
 CellChangeTimes->{{3.578658313951165*^9, 3.578658332326857*^9}, {
  3.578658410704835*^9, 3.5786584211389513`*^9}}],

Cell["\<\
Para realizar uma substitui\[CCedilla]\[ATilde]o de forma recursiva usamos \
//. Neste caso a regra \[EAcute] aplicada at\[EAcute] a exaust\[ATilde]o\
\>", "Text",
 CellChangeTimes->{{3.578658336900558*^9, 3.5786583881428413`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["A verdade sobre as fun\[CCedilla]\[OTilde]es", "Section",
 CellChangeTimes->{{3.400331763471949*^9, 3.400331764690604*^9}}],

Cell[TextData[{
 "\tNa verdade as fun\[CCedilla]\[OTilde]es s\[ATilde]o regras de transforma\
\[CCedilla]\[ATilde]o que s\[ATilde]o v\[AAcute]lidas para todas as \
expressoes do ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.40033176833581*^9, 3.400331782389371*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "5", "]"}], "//.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"h", "[", "0", "]"}], ":>", "1"}], ",", 
    RowBox[{
     RowBox[{"h", "[", "n_", "]"}], " ", ":>", " ", 
     RowBox[{"n", "*", 
      RowBox[{"h", "[", 
       RowBox[{"n", "-", "1"}], "]"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.434788219460546*^9, 3.4347883029441633`*^9, {3.5786580143628817`*^9, 
   3.5786580208771257`*^9}}],

Cell[BoxData[
 RowBox[{"5", " ", 
  RowBox[{"h", "[", "4", "]"}]}]], "Output",
 CellChangeTimes->{{3.4347882802134647`*^9, 3.434788303815927*^9}, 
   3.578657974513603*^9, 3.578658014898974*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.578658023843752*^9, 3.5786580255997057`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "5", "]"}], "//.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"h", "[", "0", "]"}], "->", "1"}], ",", 
    RowBox[{
     RowBox[{"h", "[", "n_", "]"}], "->", 
     RowBox[{"n", "*", 
      RowBox[{"h", "[", 
       RowBox[{"n", "-", "1"}], "]"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.578657979474806*^9, 3.578658028641617*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{
  3.4347882962163363`*^9, {3.578658002393269*^9, 3.5786580301203947`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[":> Substitui\[CCedilla]\[ATilde]o Postergada", "Section",
 CellChangeTimes->{{3.578658437790547*^9, 3.578658450603009*^9}}],

Cell["\<\
De forma equivalente a atribui\[CCedilla]\[ATilde]o postergada podemos fazer \
uma substitui\[CCedilla]\[ATilde]o postergada. 
\
\>", "Text",
 CellChangeTimes->{{3.578658454710639*^9, 3.578658484307816*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "x", ",", "x"}], "}"}], "/.", 
   RowBox[{"x", "\[Rule]", " ", 
    RowBox[{"Random", "[", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.578658488039137*^9, 3.578658540356542*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7136906018286066`", ",", "0.7136906018286066`", ",", 
   "0.7136906018286066`"}], "}"}]], "Output",
 CellChangeTimes->{3.5786585414593897`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "x", ",", "x"}], "}"}], "/.", 
   RowBox[{"x", ":>", " ", 
    RowBox[{"Random", "[", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.578658560300723*^9, 3.578658570294446*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.28712151390935353`", ",", "0.7255482284672532`", ",", 
   "0.06620105763183791`"}], "}"}]], "Output",
 CellChangeTimes->{3.578658572634077*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Ordenamento de Vetores", "Section",
 CellChangeTimes->{{3.4347883431811*^9, 3.434788347018237*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lis", "=", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "4"}], ",", "5", ",", "6", ",", "7", ",", "9", ",", "9"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"lis", "//.", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"z___", ",", "x_", ",", "y_", ",", "w___"}], "}"}], "/;", 
    RowBox[{"x", ">", "y"}]}], ":>", 
   RowBox[{"{", 
    RowBox[{"z", ",", "y", ",", "x", ",", "w"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.4347891480175962`*^9, 3.434789167308982*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "4"}], ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", 
   "9"}], "}"}]], "Output",
 CellChangeTimes->{3.434789168359212*^9}]
}, Open  ]],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recurs\[ATilde]o", "Section",
 CellChangeTimes->{{3.400331809519162*^9, 3.400331810050629*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{"f", ",", "x", ",", "3"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"f", "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"f", ",", "x", ",", "3"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{"f", ",", "t", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"t", ",", "x"}], "]"}], ",", "y"}], "]"}], ",", "z"}], 
  "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Fold", "[", 
   RowBox[{"Plus", ",", "t", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Nem", " ", "tao", " ", "inutil", " ", "assim"}], " ", 
   "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"t", "+", "x", "+", "y", "+", "z"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}]], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["\<\
Intera\[CCedilla]\[ATilde]o com o sistema Operacional\
\>", "Section",
 CellChangeTimes->{{3.400331819935565*^9, 3.40033182080294*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", "y"}], ")"}], "^", "3"}], "]"}], ">>", 
  "tmp"}], "\[IndentingNewLine]", 
 RowBox[{"!!", "tmp"}]}], "Input"],

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{"\"\<out.dat\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5.7", ",", "4.3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.2"}], ",", "7.8"}], "}"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", 
  RowBox[{"\"\<out.dat\>\"", ",", "\"\<Table\>\""}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"In", "[", "1", "]"}], ":=", 
    RowBox[{"Directory", "[", "]"}]}], "\n", 
   RowBox[{"SetDirectory", "[", "\"\<Examples\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FileNames", "[", "\"\<Test*.m\>\"", "]"}]}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"!", "date"}], "\[IndentingNewLine]", 
 RowBox[{"RunThrough", "[", 
  RowBox[{"\"\<cat\>\"", ",", "789"}], "]"}]}], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[GridBox[{
   {
    ButtonBox[
     StyleBox["\[FirstPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageFirst"]}],
     ButtonNote->"First Slide"], 
    ButtonBox[
     StyleBox["\[LeftPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPagePrevious"]}],
     ButtonNote->"Previous Slide"], 
    ButtonBox[
     StyleBox["\[RightPointer]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageNext"]}],
     ButtonNote->"Next Slide"], 
    ButtonBox[
     StyleBox["\[LastPage]", "SR"],
     BaseStyle->"SlideHyperlink",
     ButtonFunction:>FrontEndExecute[{
        FrontEndToken[
         FrontEnd`SelectedNotebook[], "ScrollPageLast"]}],
     ButtonNote->"Last Slide"], " ", 
    ButtonBox[
     StyleBox[
      RowBox[{
       CounterBox["SlideShowNavigationBar"], " ", "of", " ", 
       CounterBox["SlideShowNavigationBar", "LastSlide"]}], "SR"],
     Appearance->{Automatic, None}]}
  }]]]], "SlideShowNavigationBar"],

Cell[CellGroupData[{

Cell["Depura\[CCedilla]\[ATilde]o e Desempenho ", "Section",
 CellChangeTimes->{{3.400331826959749*^9, 3.400331828323225*^9}},
 CellTags->"LastSlide"],

Cell["\<\

\t- Use funcoes do sistema
\t- Use programacao funcional
\t- Use aritmetica real
\t- Avalie sempre que possivel
\t- Evite Append and Prepend
\t- N\[ATilde]o modifique listas localmente
\t- Cuidado com padr\[OTilde]es Ineficientes
\t- Use fun\[CCedilla]\[OTilde]es puras
\t
\tFerramentas 
\t- Timing
\t- Trace\
\>", "Text",
 CellChangeTimes->{{3.5786586025467052`*^9, 3.578658615291819*^9}}]
}, Open  ]]
}, Open  ]],

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Uso do Trace", "Section",
 CellChangeTimes->{{3.434789206908881*^9, 3.434789212058326*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lis", "=", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "4"}], ",", "5", ",", "6", ",", "7", ",", "9", ",", "9"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Trace", "[", 
  RowBox[{"lis", "//.", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z___", ",", "x_", ",", "y_", ",", "w___"}], "}"}], "/;", 
     RowBox[{"x", ">", "y"}]}], ":>", 
    RowBox[{"{", 
     RowBox[{"z", ",", "y", ",", "x", ",", "w"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.4347892178591967`*^9, {3.434789273954974*^9, 3.4347892812133904`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox["lis",
      HoldForm], ",", 
     TagBox[
      RowBox[{"{", 
       RowBox[{"8", ",", 
        RowBox[{"-", "4"}], ",", "5", ",", "6", ",", "7", ",", "9", ",", 
        "9"}], "}"}],
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"z___", ",", "x_", ",", "y_", ",", "w___"}], "}"}], "/;", 
        RowBox[{"x", ">", "y"}]}], "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{"z", ",", "y", ",", "x", ",", "w"}], "}"}]}],
      HoldForm], ",", 
     TagBox[
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"z___", ",", "x_", ",", "y_", ",", "w___"}], "}"}], "/;", 
        RowBox[{"x", ">", "y"}]}], "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{"z", ",", "y", ",", "x", ",", "w"}], "}"}]}],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", 
       RowBox[{"-", "4"}], ",", "5", ",", "6", ",", "7", ",", "9", ",", "9"}],
       "}"}], "//.", "\[InvisibleSpace]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"z___", ",", "x_", ",", "y_", ",", "w___"}], "}"}], "/;", 
       RowBox[{"x", ">", "y"}]}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{"z", ",", "y", ",", "x", ",", "w"}], "}"}]}]}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"8", ">", 
       RowBox[{"-", "4"}]}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{
       RowBox[{"-", "4"}], ">", "8"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"8", ">", "5"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{
       RowBox[{"-", "4"}], ">", "5"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"5", ">", "8"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"8", ">", "6"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{
       RowBox[{"-", "4"}], ">", "5"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"5", ">", "6"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"6", ">", "8"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"8", ">", "7"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{
       RowBox[{"-", "4"}], ">", "5"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"5", ">", "6"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"6", ">", "7"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"7", ">", "8"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"8", ">", "9"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"9", ">", "9"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
      ",", "9"}], "}"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.4347892823805847`*^9}]
}, Open  ]],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Uso do Timing", "Section",
 CellChangeTimes->{{3.434789306813058*^9, 3.4347893114825077`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"lis", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "200", "}"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.4347893191196136`*^9, 3.434789361374763*^9}, {
  3.434789419228544*^9, 3.4347894455312767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Timing", "[", 
   RowBox[{"lis", "//.", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z___", ",", "x_", ",", "y_", ",", "w___"}], "}"}], "/;", 
      RowBox[{"x", ">", "y"}]}], ":>", 
     RowBox[{"{", 
      RowBox[{"z", ",", "y", ",", "x", ",", "w"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.434789364380396*^9, 3.4347893968629827`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.2551270000000017`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.006842599429609013`", ",", "0.00703506853913077`", ",", 
     "0.009405962267152844`", ",", "0.012391365085417314`", ",", 
     "0.01271066298657747`", ",", "0.012985394437311596`", ",", 
     "0.01871282711350776`", ",", "0.026801278012477083`", ",", 
     "0.02867377013266213`", ",", "0.033908466592532376`", ",", 
     "0.04342488925433133`", ",", "0.04381839576514567`", ",", 
     "0.045143324984707175`", ",", "0.04630466875764747`", ",", 
     "0.049375406160826654`", ",", "0.05962128519038463`", ",", 
     "0.06472502837608027`", ",", "0.06840719008960455`", ",", 
     "0.07682602485133083`", ",", "0.07914997708030098`", ",", 
     "0.08696448843326253`", ",", "0.09028792313748363`", ",", 
     "0.09268724995928099`", ",", "0.09410311825553215`", ",", 
     "0.09859184231515077`", ",", "0.09924694662715011`", ",", 
     "0.1036465199083444`", ",", "0.1062890450686905`", ",", 
     "0.10966773814692185`", ",", "0.1139741325780917`", ",", 
     "0.11855706788444197`", ",", "0.11896169327014575`", ",", 
     "0.12032591447507754`", ",", "0.12081000534160982`", ",", 
     "0.12531187217247633`", ",", "0.133036577461655`", ",", 
     "0.13330363553678065`", ",", "0.1347356818325938`", ",", 
     "0.13620326252459414`", ",", "0.13755498650087677`", ",", 
     "0.14805184602543206`", ",", "0.15566445122951714`", ",", 
     "0.1566219049698809`", ",", "0.1646988653982273`", ",", 
     "0.1730641773677133`", ",", "0.18444064776579674`", ",", 
     "0.1947295296318452`", ",", "0.2057511389246355`", ",", 
     "0.20884499102192558`", ",", "0.2187365333619471`", ",", 
     "0.22961854073419602`", ",", "0.23113485559019917`", ",", 
     "0.23144719634852456`", ",", "0.2364605768522081`", ",", 
     "0.24200990581961335`", ",", "0.24609288400001597`", ",", 
     "0.25293548342962496`", ",", "0.25880198365375945`", ",", 
     "0.2767106972760577`", ",", "0.28543479507394465`", ",", 
     "0.2913575868024747`", ",", "0.30205120554690895`", ",", 
     "0.30244475323637554`", ",", "0.3067085646444051`", ",", 
     "0.3180993440234617`", ",", "0.3189339720255837`", ",", 
     "0.32276408977693954`", ",", "0.32353123057232014`", ",", 
     "0.32416759433317877`", ",", "0.3252661695246456`", ",", 
     "0.3275809172906658`", ",", "0.3278066842920713`", ",", 
     "0.3335098426568822`", ",", "0.3353947047813605`", ",", 
     "0.34062721205148794`", ",", "0.3411579088834164`", ",", 
     "0.3419544014492296`", ",", "0.34511788736566223`", ",", 
     "0.35220500070498223`", ",", "0.3589648444547728`", ",", 
     "0.359797647308694`", ",", "0.3600602899120168`", ",", 
     "0.3630899843374338`", ",", "0.3644837738101796`", ",", 
     "0.38468174170109476`", ",", "0.3872897854756327`", ",", 
     "0.38748911815301984`", ",", "0.3918255369868017`", ",", 
     "0.39414473002544803`", ",", "0.3972541127608064`", ",", 
     "0.40191406685724057`", ",", "0.40728029065128607`", ",", 
     "0.41426568377693446`", ",", "0.41602533812500064`", ",", 
     "0.423689872830853`", ",", "0.4280819547406415`", ",", 
     "0.43098641045874225`", ",", "0.4349339076715675`", ",", 
     "0.43908804181196215`", ",", "0.4399997397372523`", ",", 
     "0.4470573918419477`", ",", "0.45493405580478147`", ",", 
     "0.4654007442858273`", ",", "0.471166693975128`", ",", 
     "0.47375572527680443`", ",", "0.4773689916603758`", ",", 
     "0.47875230343671316`", ",", "0.48454302164519847`", ",", 
     "0.489206195176022`", ",", "0.5066786770323324`", ",", 
     "0.5097749459590217`", ",", "0.5169038661032096`", ",", 
     "0.5299789178995435`", ",", "0.5355341035124288`", ",", 
     "0.5394675749566402`", ",", "0.5508203481808435`", ",", 
     "0.5606909348111767`", ",", "0.5642968233313759`", ",", 
     "0.5677367197035985`", ",", "0.5801820067308818`", ",", 
     "0.5810805349750616`", ",", "0.5882376913415621`", ",", 
     "0.6005821759941332`", ",", "0.6030702995745264`", ",", 
     "0.6074081265987682`", ",", "0.6136489946567836`", ",", 
     "0.614443195137899`", ",", "0.6190858851731452`", ",", 
     "0.6210651955153444`", ",", "0.6372153305607592`", ",", 
     "0.6470802134550729`", ",", "0.653912718798791`", ",", 
     "0.6702228974021613`", ",", "0.674665701806775`", ",", 
     "0.6856433691290607`", ",", "0.6882237707522385`", ",", 
     "0.700424859360182`", ",", "0.700613483090046`", ",", 
     "0.7135150300546883`", ",", "0.7135297146903238`", ",", 
     "0.7174449844293714`", ",", "0.7268151114608749`", ",", 
     "0.7411833317106051`", ",", "0.7414037677606581`", ",", 
     "0.7431392538845404`", ",", "0.7473242006139177`", ",", 
     "0.7503797698130664`", ",", "0.7523895207099258`", ",", 
     "0.7593835711425967`", ",", "0.7608698736837028`", ",", 
     "0.7637764098353066`", ",", "0.7702519080224142`", ",", 
     "0.7756911651213336`", ",", "0.775705849756969`", ",", 
     "0.778782837723891`", ",", "0.779657870289567`", ",", 
     "0.7804642899212095`", ",", "0.7806927813580616`", ",", 
     "0.7870439383455369`", ",", "0.7894031850102604`", ",", 
     "0.7921381311597013`", ",", "0.7989733782671994`", ",", 
     "0.8111789909838729`", ",", "0.8138063485201353`", ",", 
     "0.8343250353962982`", ",", "0.8370427528463413`", ",", 
     "0.838221068131741`", ",", "0.8411676348259072`", ",", 
     "0.8448456757221194`", ",", "0.85269052976146`", ",", 
     "0.8542654235141868`", ",", "0.8572370408075367`", ",", 
     "0.8572903147725404`", ",", "0.8813079864753036`", ",", 
     "0.8860325940879992`", ",", "0.8953430127218912`", ",", 
     "0.8960856395925373`", ",", "0.9035539382995333`", ",", 
     "0.9036386359092362`", ",", "0.9054509464010173`", ",", 
     "0.908355402119118`", ",", "0.9140558398353991`", ",", 
     "0.9143935521221608`", ",", "0.9210909083745298`", ",", 
     "0.9311214394991976`", ",", "0.9417400848775497`", ",", 
     "0.9488629877709839`", ",", "0.9685413628900267`", ",", 
     "0.9712644473506321`", ",", "0.9723463829797186`", ",", 
     "0.974240842446593`", ",", "0.9783346477358681`", ",", 
     "0.9817194030908623`", ",", "0.9824630299250036`", ",", 
     "0.9880705600783376`", ",", "0.988322241425623`", ",", 
     "0.9934403033321308`", ",", "0.9952832337901182`", ",", 
     "0.9997252685492659`", ",", "0.9999853153643646`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.4347894156352043`*^9, 3.434789452392314*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Timing", "[", 
   RowBox[{"Sort", "[", "lis", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.434789457245694*^9, 3.434789463788909*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00007300000000043383`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.006842599429609013`", ",", "0.00703506853913077`", ",", 
     "0.009405962267152844`", ",", "0.012391365085417314`", ",", 
     "0.01271066298657747`", ",", "0.012985394437311596`", ",", 
     "0.01871282711350776`", ",", "0.026801278012477083`", ",", 
     "0.02867377013266213`", ",", "0.033908466592532376`", ",", 
     "0.04342488925433133`", ",", "0.04381839576514567`", ",", 
     "0.045143324984707175`", ",", "0.04630466875764747`", ",", 
     "0.049375406160826654`", ",", "0.05962128519038463`", ",", 
     "0.06472502837608027`", ",", "0.06840719008960455`", ",", 
     "0.07682602485133083`", ",", "0.07914997708030098`", ",", 
     "0.08696448843326253`", ",", "0.09028792313748363`", ",", 
     "0.09268724995928099`", ",", "0.09410311825553215`", ",", 
     "0.09859184231515077`", ",", "0.09924694662715011`", ",", 
     "0.1036465199083444`", ",", "0.1062890450686905`", ",", 
     "0.10966773814692185`", ",", "0.1139741325780917`", ",", 
     "0.11855706788444197`", ",", "0.11896169327014575`", ",", 
     "0.12032591447507754`", ",", "0.12081000534160982`", ",", 
     "0.12531187217247633`", ",", "0.133036577461655`", ",", 
     "0.13330363553678065`", ",", "0.1347356818325938`", ",", 
     "0.13620326252459414`", ",", "0.13755498650087677`", ",", 
     "0.14805184602543206`", ",", "0.15566445122951714`", ",", 
     "0.1566219049698809`", ",", "0.1646988653982273`", ",", 
     "0.1730641773677133`", ",", "0.18444064776579674`", ",", 
     "0.1947295296318452`", ",", "0.2057511389246355`", ",", 
     "0.20884499102192558`", ",", "0.2187365333619471`", ",", 
     "0.22961854073419602`", ",", "0.23113485559019917`", ",", 
     "0.23144719634852456`", ",", "0.2364605768522081`", ",", 
     "0.24200990581961335`", ",", "0.24609288400001597`", ",", 
     "0.25293548342962496`", ",", "0.25880198365375945`", ",", 
     "0.2767106972760577`", ",", "0.28543479507394465`", ",", 
     "0.2913575868024747`", ",", "0.30205120554690895`", ",", 
     "0.30244475323637554`", ",", "0.3067085646444051`", ",", 
     "0.3180993440234617`", ",", "0.3189339720255837`", ",", 
     "0.32276408977693954`", ",", "0.32353123057232014`", ",", 
     "0.32416759433317877`", ",", "0.3252661695246456`", ",", 
     "0.3275809172906658`", ",", "0.3278066842920713`", ",", 
     "0.3335098426568822`", ",", "0.3353947047813605`", ",", 
     "0.34062721205148794`", ",", "0.3411579088834164`", ",", 
     "0.3419544014492296`", ",", "0.34511788736566223`", ",", 
     "0.35220500070498223`", ",", "0.3589648444547728`", ",", 
     "0.359797647308694`", ",", "0.3600602899120168`", ",", 
     "0.3630899843374338`", ",", "0.3644837738101796`", ",", 
     "0.38468174170109476`", ",", "0.3872897854756327`", ",", 
     "0.38748911815301984`", ",", "0.3918255369868017`", ",", 
     "0.39414473002544803`", ",", "0.3972541127608064`", ",", 
     "0.40191406685724057`", ",", "0.40728029065128607`", ",", 
     "0.41426568377693446`", ",", "0.41602533812500064`", ",", 
     "0.423689872830853`", ",", "0.4280819547406415`", ",", 
     "0.43098641045874225`", ",", "0.4349339076715675`", ",", 
     "0.43908804181196215`", ",", "0.4399997397372523`", ",", 
     "0.4470573918419477`", ",", "0.45493405580478147`", ",", 
     "0.4654007442858273`", ",", "0.471166693975128`", ",", 
     "0.47375572527680443`", ",", "0.4773689916603758`", ",", 
     "0.47875230343671316`", ",", "0.48454302164519847`", ",", 
     "0.489206195176022`", ",", "0.5066786770323324`", ",", 
     "0.5097749459590217`", ",", "0.5169038661032096`", ",", 
     "0.5299789178995435`", ",", "0.5355341035124288`", ",", 
     "0.5394675749566402`", ",", "0.5508203481808435`", ",", 
     "0.5606909348111767`", ",", "0.5642968233313759`", ",", 
     "0.5677367197035985`", ",", "0.5801820067308818`", ",", 
     "0.5810805349750616`", ",", "0.5882376913415621`", ",", 
     "0.6005821759941332`", ",", "0.6030702995745264`", ",", 
     "0.6074081265987682`", ",", "0.6136489946567836`", ",", 
     "0.614443195137899`", ",", "0.6190858851731452`", ",", 
     "0.6210651955153444`", ",", "0.6372153305607592`", ",", 
     "0.6470802134550729`", ",", "0.653912718798791`", ",", 
     "0.6702228974021613`", ",", "0.674665701806775`", ",", 
     "0.6856433691290607`", ",", "0.6882237707522385`", ",", 
     "0.700424859360182`", ",", "0.700613483090046`", ",", 
     "0.7135150300546883`", ",", "0.7135297146903238`", ",", 
     "0.7174449844293714`", ",", "0.7268151114608749`", ",", 
     "0.7411833317106051`", ",", "0.7414037677606581`", ",", 
     "0.7431392538845404`", ",", "0.7473242006139177`", ",", 
     "0.7503797698130664`", ",", "0.7523895207099258`", ",", 
     "0.7593835711425967`", ",", "0.7608698736837028`", ",", 
     "0.7637764098353066`", ",", "0.7702519080224142`", ",", 
     "0.7756911651213336`", ",", "0.775705849756969`", ",", 
     "0.778782837723891`", ",", "0.779657870289567`", ",", 
     "0.7804642899212095`", ",", "0.7806927813580616`", ",", 
     "0.7870439383455369`", ",", "0.7894031850102604`", ",", 
     "0.7921381311597013`", ",", "0.7989733782671994`", ",", 
     "0.8111789909838729`", ",", "0.8138063485201353`", ",", 
     "0.8343250353962982`", ",", "0.8370427528463413`", ",", 
     "0.838221068131741`", ",", "0.8411676348259072`", ",", 
     "0.8448456757221194`", ",", "0.85269052976146`", ",", 
     "0.8542654235141868`", ",", "0.8572370408075367`", ",", 
     "0.8572903147725404`", ",", "0.8813079864753036`", ",", 
     "0.8860325940879992`", ",", "0.8953430127218912`", ",", 
     "0.8960856395925373`", ",", "0.9035539382995333`", ",", 
     "0.9036386359092362`", ",", "0.9054509464010173`", ",", 
     "0.908355402119118`", ",", "0.9140558398353991`", ",", 
     "0.9143935521221608`", ",", "0.9210909083745298`", ",", 
     "0.9311214394991976`", ",", "0.9417400848775497`", ",", 
     "0.9488629877709839`", ",", "0.9685413628900267`", ",", 
     "0.9712644473506321`", ",", "0.9723463829797186`", ",", 
     "0.974240842446593`", ",", "0.9783346477358681`", ",", 
     "0.9817194030908623`", ",", "0.9824630299250036`", ",", 
     "0.9880705600783376`", ",", "0.988322241425623`", ",", 
     "0.9934403033321308`", ",", "0.9952832337901182`", ",", 
     "0.9997252685492659`", ",", "0.9999853153643646`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.434789464615933*^9}]
}, Open  ]],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["\<\
Exerc\[IAcute]cio
\
\>", "Section",
 CellChangeTimes->{{3.548509393676334*^9, 3.5485093990495853`*^9}}],

Cell[TextData[{
 "\nCompare o desempenho do algoritmo proposto para ordenar vetores usando o \
m\[EAcute]todo proposto acima com o m\[EAcute]todo do ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ordenando vetores de tamanhos 10, 50, 100, 500 e 1000 e medindo os tempos. \
Plote os resultados em escalalog-log. "
}], "Text",
 CellChangeTimes->{{3.548509407906609*^9, 3.548509508791078*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Li\[CCedilla]\[OTilde]es ", "Section",
 CellChangeTimes->{{3.434789488781081*^9, 3.434789516506412*^9}}],

Cell[CellGroupData[{

Cell["\<\
Programas curtos nem sempre s\[ATilde]o eficientes\
\>", "Item",
 CellChangeTimes->{{3.434789518974023*^9, 3.434789561857136*^9}}],

Cell["\<\
Programas elegantes nem sempre s\[ATilde]o eficientes\
\>", "Item",
 CellChangeTimes->{{3.434789518974023*^9, 3.4347895762543783`*^9}}],

Cell["\<\
Muitas vezes em computa\[CCedilla]\[ATilde]o vale mais a pena copiar do que \
reinventar
\
\>", "Item",
 CellChangeTimes->{{3.434789518974023*^9, 3.4347896384424953`*^9}}]
}, Open  ]],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Um exemplo Legal", "Section",
 CellChangeTimes->{{3.400335769261557*^9, 3.400335776526325*^9}}],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "50"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IFS", "[", 
    RowBox[{"A_", ",", "b_"}], "]"}], "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ".", "x"}], "+", 
      RowBox[{"b", "[", 
       RowBox[{"[", "n", "]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lis", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{"IFS", "[", 
      RowBox[{"A", ",", "b"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", "10000"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"lis", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"PointSize", "[", "0.001", "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.400335612587791*^9, 3.400335661530673*^9}, {
  3.400335703899408*^9, 3.400335724176257*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointSize[0.001], PointBox[CompressedData["
1:eJxU3Wd4VNW3x/GEUATpJHQwIRBaEtIT0vglkzZpM3NmzpwBFBARFGnin2Kh
2AGxoUgRGyggUhSkCCioiKBgBZQqKFYQAVGR5l1r7TUv7n2T53PvnP3dayfM
OeeW58YNHWvdWiciIqJF94gI/mn+42y///cTbvz/n7nm5xeWOtH89LrMz9hY
dYY62vyMrjU/iyvNz3oB+Tm9ud/8fCBofj5l1sH7jvyMHeaTny8PCRmfLJKf
3jfDTpOfPb4Nu6txyK1uKz8bHTD7LX7C9OudstV5kPwER51k/Fc5/8Sut6oh
+SlyffPxK2W/3jffk+uv6xuUffcIDXaMD5Txz+iVfULqbOM1FeqekPwblroT
JLdf1nuo46mW4OkvjXTUjSD5TF4v9mToG56L8gvD5t8H5feGnWhcw5+j7d4R
q85V8++j0QHnGY+6MSQ/jH8ftJ3M+sYnSyD59lGQ/Dv0e+Dl59O6nL/RVtO6
vHyyo6Y+TZvQhvbDlz9D58e5x8IuAE+/+6MQpj91y023pHkhue/Va2E81K1O
VedClh9VA9nOfI+6ELKdakCWr/FC8s94jffCuFUR4j7evHPYOi8kv8MLWf5g
ALL89wHj/qV8+ONTzwUhyx/wQXIXHeNgMSR3X0idDp4+4b2wuxkXutXtwNPP
/NwCHXZ11hvNIfmfbch2GlXib87f5ajzjP8sx9rVqQdXfuDBVM7fZ6E/L3cz
jK8Uq1PV6ep4dTfw9L1GVeFNmv6lbVXYwssP9GMl58f6MYimfTgpiAOcyw4a
ryrDHTT9v8876mxk8XI1IXzLy5+qxfM0/bWlIWQlPG9/mxtALU077Wv15hJ0
59yvYWca3+5Wd1fnqjvgE97OQg8kt6USkh8ewALOJfsh+XVB49UuSP6go86A
5EeFIMv1roUsvyGET4bHbDjTKIDZMz//LuOwelYJdnLu97AzjUe7IfmhtUjj
/GELsnxb2gfnf7eN55cYjy6D5Jb6IPkOlnFCsfHzxep0dbq6m7qbup26HT7r
NepozDPNIdvf21x9HWQ7jSsxgrfrrguePivKjzfenOBUL3ZDLo8MqnON7y9D
b758uQdf0PTDYy205ssDMH65WJ2KC9l7N7Tr4cMjNH1LuwaXOBdtYyhPu9+P
qzRt/UaOsV1iPKtcnQnJDbXU3Y2/L1Z3UKfjLd7eihY4zvmLNeqGyOH8NT9W
c36vG4s4Py2ozkUt57Y5OM3LrfNgGU3/0eAQtvRO8O0fFcA+Xn6N+nQJRm7Y
i3PfhJ1p7LjxB02beW8tFo5O917Zb6n7GdsuTP6o64qF76ZA8rYPg1Jnrhje
pwaS72WrC3GI8zEO1vB22qQYzy1Xd1HnoPUzy0f+XVwFyXfzqPPB07/REriF
pht0nRcbafoVD3mNZwBHOP9BQJ2KMZw/EVTHI5uXP+uo22ARTV85OaRuZnyx
Amm83R0N1H2xgLf3fZS6N+jwD15/LlJ9A+TyJ91oz9v5r1Kdq85TJ0K2858H
snx5LB7gy6cF1NEoommvbAuqGxv3Kwcddlzh927QYTf8z2NBlrtoQZZfZkM+
fsUGT/+f3zG+r8z463LwblvcYIGn/+9/FvaffvjijCdtSH6zbdyszDi3TJ0N
OuxrLzXVzzfrafxEsbqTOh2ynS8qIdv5oUadpy4EHV584QUPhnD+Ri9+58un
BPAm51YHjK+WGCeXqjOxkpf/1Aee3jWtFkGa/uNbbXU/vMHLpzl4r/kN517Z
lmK8tlzdBb1P/PfrplGWurXx6WJ1U3U6BvN2BzdAFecv1yCFTu+XNVHqQnTh
3AtuSH6wF/Lxny1Ibk3AeIQLdNh3HvwmqM6ALH/KUSeAp/97Qgj0y7h0ak8V
ZPnNYecb57rVyWr6XuL8wWrwabz3hEdNzwPLKX9LABW02/Q8LyL2Uf6toPEW
IOI3yn/roCUvt5r+6xMoT9/3M5tdnTD8mwCm8/L0fb/j0Wu5604FgU7zpnQ6
rL6j3Hgg7eeVbZ+dHmDBS9N/TM+DPM3EVTYkT8+Dkgs6kDw9D4oPlBvT86Dk
J1iQPD0PNuc8/d1Jnp4HxfR3Jzl6HjTOBk+7ip4HjXtC8vPC7mTcxo0veTtf
0/2Pcx9ZuPDNgptOZdD9j6a/9L0NybcPQvJ3OsYLy4zPlauz1TnqnpDt5HtA
h72+Nr0awznnCWAI52b7sY6mf2xZEG/StLeXBXGI8187xjvLjP0V6mzI8s9a
6p7G0S5MpGn25lRjKudKfeoCbKPpX+xi4/PTA5a16+7FEM63cHAb55+hfz+c
vy6EDF5udxDfcu6hEBbS9D+cpO99mr7nB+phFcbFbnVfda66N/I2vDd51lMe
rLvjheGLRlXjSc7T861xgTE93xr3wTDO0/PtITqd2g1xWMt5er41jsFBXp6e
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
3e2XK6PUPbGHt/tapLoThvP2voqAbP+Rlkin0xp8e9iNMIAvf9ANPo3sfW51
rjpXnQhZbr0HcvlT1eBpXaMD6gLQ4b/3yoYgZLdpXkym6b2HHeO1wFaadvno
EGS5lV4c4+U3qBOLMJamH3k47DTkcO73EHj3sY/VoCPt9tDfYRfiCc5fDqEt
50tTjO91q7uoc9Wt1Yl4gA6v/7BKtOTt0POBcZ66QJ0Eyad6IbmV1ZD8/IC6
wLhtqboPePqCnT5I7kAcePrOt9jg6XflVkGWT3XU+eDpP24bwtTXilr3p+df
nv6W2epHYdzYrU6F5D601PHGLpe6jToDofbDnp5A/z5kO81r1XnqfuokyPZm
pKDqwcS1TddUI4e306VGXaAuVPdBR95OixQs5dw3cXiUc3Vr1DFYzMu/71c3
gY+XHxLE13Q6H56qb3y8DCPpdE5MiFJnI3NXl1NnN0eqe6KYL3/cDcnlV6tz
Ibkn/ZDLl3gw+t7ZcQ+UByGX+wDJ03MqHe7WMc96Icv5QsbRRcZfVqjTsJGm
m/y2pe5qnOFSt1VnoP+wToOyGzXHmdRHruvcpBZlnI+oxH2cp/uHcR4KOU/3
jzkTJh/tsd2DGzi33cFuXo7e955KLTl72xDaT9M1HerR+94uXv5NNb3viVPc
oMMqi6T3vTTO7bGMy4rQjqav/5MNnnb6l15I/i7H2FcEydPzgXEaJL8o7K5I
4zw9H/A0KbOq0I5zP4edDzrs9vP/DDsZkqfnc9leaRwkfyXsGHTh/LWwmxjT
8zn9surMXlxfnQuePnq9G7KdlzzqXEh+RABy+SoPJL8uiG/5crrfidPLMXFJ
xJLlc72QfLVlHFNkvKcYx3ps7zHyIy94+n7pPuPSIkiunY0cmmYAnRdP/3lj
x5jOS/L1Q3iCc/u8kNyD6kCRcZRbnQbJbbfwKufn1qCCpht+3FYX4lXOj3Ng
Tfftm1WZYny2HDzt4pY1uJ3z9D5pXAjJ0/ukLF/sheQGO4gs8/Xu9UoAdPgL
7uf/fWle/osgJD8vBFn+FweS/1R9W4VxFb3f8fILLbxP01/8yjJu7zK2XOoM
dQbo8Jc/VL8Wsp1o+vvmfGQAkq8XgOSnByH5B4LGEeXGdcrVOeocdS/k0vSv
0fORcWe8wDl6PrJ4uxGtIDl6PjK+Hhdo+kb0fLSETiPqWzcucZ6ej4xzjYeU
qxPB00aGLFi83VGxkNxKWx2NlzkXdNSNjQ+U43XeTlZ9dQ4k3yFK3QsOLz/f
jQzezoBqda66QJ2o7oNEXr46FrKdU9XqaLTn5Tb71Y3R5L6eEXfcFERrzifU
B0+/frWD1x+q/2bqW27Ick4I8vHTFh6gaVe9EYJ8/G8b78+r8+aB/eqJZZDc
b2Fng6ef8FfYPY0nuNWdIHl63mvYZMgtQ7+h+wPn6XnPOA+Sn+Sok4z/KYds
Z3M15nN+iqUuQDXn6e/XuA+Wco7+fiV3NA5+mn4z/f0ax6AX5+eF3QQxnKe/
X57+1Bk3JPdj2Lng6S+fD6EOL7/FA8nT91EkX34TIPkrYadC8vR9NP3xmTdN
cmog+f/CLoTkydt37li9pXeK8TQ3JNeoBpKn5zXjQuPBLnw7/9sJk+qlQPKO
D5KLrIHke9t4gpff7ofkYxxjlBjPLcewod8cjXnKB8ndahk3p/cVmn7bWlud
bpxWpu6G1TT9msbhz7cznl2MNN7ejObqdPV1OM3b+aEGC3i7JXXVheDTq9Ol
Dibydu5MgSz3tBuDeDsdayAfP0nvoTRtu4/9xsNcWMnL3xJUZ+AATb/zLQc8
fYt2tTjFy4dCGMTT1g9gIi+/Uv1IiXGiW52pzlV3xzHOP+ZRd8AfNP0TpcBE
zm2qxBXOP+1V5xm3KMIxzp/xYBvnd3jxx+rpMxpPAobw8t8H1KnGQ0vV8ZjP
uW996jbYw7lRtrqZ8elSSO6yG39y7rJPTd8/NP2MKTYGcf49D65yvtDBGr58
MIzfK0dibJcPj87z4r9Pclq/NZbet5s/feLMpwFM5/xGG9fP2DXunx+D2M65
gQ7q8/LnHQxp93GXv5NCxuMrjFdVoA7nFtHvh/NvWMYdXca9XeoMPEfTfldJ
D0Ilj2zp06AWn3K+mw3J0/f5cM63dCB5+j5P53zDkDF9n7fn3EMhdEk7MqUv
LDxO0wc/UG8vhuTo/YinbZriA08796z6zSLjcW7w9FGnvejL+SMWJP93AJKn
7xvxxFJInn73PO30oz5IPi9kfFOx8ZYKdbq6r7qbujck/0YV+nN+UjUkP9IP
yb/gN/7NZdypRJ2hzlQnoIy3U14LWf5oFVrS9EdbBNT5mEnTn5kRhOQ6eCG5
HY7x8wAd/qa8oSF1KmT5t0L0d07LD6d/ZzT9E9+GXQjJnQ7R333kxAnpKeBp
4v8Ou4vxRLe6tTpX3VSdiIs/RmzZ3K4BZLt5sbjC250dBdlOgypM7bt99Zid
kep8bOs4xMn+IQI3cj7Ci5/48kfdWM3LTQ+oc+HwctuD6kRjlOMuXt4Vq84B
T3vndVV4jk6jaXOPOh9VnLsOqMO7pff/VjR95ANeY3r/b8T59wPqVOOiUsjy
Q2ogy3/hUxeCDr9T7G02eJq4lBTjX0ohucY1kNwln7oQdPhRdenf67f79+bU
rZ8CydO/V+MuxvTv1bi1OkfdFFvpNF7u46Hv0eEd60Q1wB+cq6LvOd7u/VHG
n5aAT2f79kh1Jn2v0naPR6i74xRfTufbmbfzb5U6V52PLXz5Kx505dwN9F7M
l3th/BLUqepU5PzQvG1OoAYzefkRNfiMd7vfD57+/EG/sV0CWX5UUJ0Jnu6+
DY66u3FWBdpz/rcqyPKPW6DDHbf8Hj/o8Od9vtOG5AqC6My5WxyMv65xxxUv
OmjW/MKP61JD6MvLeUK4jvPz1Z9XGLd1gw7LtX8dfW9xbqdlnO4yLnOpMyB5
nw8lNO1fjWsh+R62up/x8lJ04e09kqLOUneBbGdFrbq1up+6KWQ7+1MguQtu
SD6zRp0Lye/1qxPN8sODkMtfrAZPH1jngKd/ZZkfsnz/kHH3EsjyK8POBB3+
7JEHwu5uHHSrO2BwYYclC/db4NP64pkWSOH8b7a6ofHIMkQ9umLEL7vrqrNB
vwyXZ6kbe3g7h2rVufiT81kBdaLxhhLI5c9WYwpN+8Yqn7rAOKlY3Qey/PV0
/jT9sE/i8AVNv76erY4xfrhU3USdhcW/tbsn7cf66h7w/dW4YMH4KHVHvMHL
P+/GaJp+4K5KnOKP/2SBp2+d5sff/PE/6TmK8+2CxneV4WO+fLaDQprmSEd6
DqJpi8tCeOmV7v4xT9hIW9F/dNwSddMy43i3OhuS22XhNs5/SO81NO2wkzba
cz6F3jM4P94xfrPE+Hw56Hf9Tt+VPrzOeXpfEycWG18pVqdDcv186m7G24rU
7SD5P7yQ7T/XHJL/J6C+DpK7HITkd7jB0/971YFcfs6C5KaGjO90GV+rUGeo
+6IHTVvVsRYDOD/Ng09o2pYNApD84IDxoyXG35WoM3GA8xt96u7G2cXqDtjA
yzfxoYZz9Dx2uLhs6n/1bXUexnAuylEnGT9Yjl7Zj3ZrurEaN3JuiIVP9t48
88NVfiTT9GPftI2TStCGcyH6Prkr9P24x3xoTNN3SAwZX19svLJCna7uq+4G
F2/nDg94+jGvVOHpp7/b9v6AABbR7gfe5ofkV9H3H+cygpD8Acf4bfp74fwd
IXU2ZPn1IfyPl/+9Fjz9gUNh9zMe4EYuTfvw3yngadcfoO8zzhfUYA7nT9nq
Quzm/AQHfBpfdE6B5HND6i7GmyvUrSH51Za6KST3jY0dPE6zBuBpV93hYChv
99Eo41PlkNwiN45z/h5LnYuznH/XVicaF5RBLn+mGldo+puaWeoC4yeL1X3w
H+fjfeBpx52vRkQDyrWwIctt9WM6Tf/XdY5xfonxjHJ1Jo5zbijNQ7vv7qnF
OJq281u2uh9yOEe//x2cW5Zi/G25uguacn6iBckHqiD5LbY63zivTJ2MD2j6
HU0t0OHVvvhJNW7m/KO2ugCSdznqPpBcXAg38nZ+jAMdfvnpp8KOgeR3hd3E
uMKNZN7e+frqXLQ59OFu/91R2EDTd5rjQePfT5x8fWskVnN+WACP8PaORRif
LIFc/ogbozj/jk+dS+9/lL/RVicaHymFLE/PW6tp2q7/+HBvzt29xtLz1jec
u9dW5+M0Tb+7wFEnG79bjsJF+XOz68ZhC00/nt5HZvDysVUYxHl6H/medhtX
4ccaztH7iHgXvffSdGfofcQ4A6c5/1zYCfib85+G3R73co7e3+lwOzywshKF
NO0xen9/lnO9/biB8/+q33AZ3+3Gj3z5SB8qOH/MMv6tiJ53KP+HDZ5m7SUv
WnKe3hd4mv5XA/T8Q3l6XxBPKTWm9wXjLHVf0O+uKPhSLWQ7YzwI3O16an/3
AHj6rQMDxstKIHn6vrCPNR/21+s+SJ6+LyQfsCF5+r6Q5Xs56MzLr1evKDfO
dKtz1LnqXpjB+cc96s4ooek3lgF8WoV2K3Wq+no8zdvx1UC2v6IeJL/PDz49
z/46xoES5PByz7lBh3+0/VyfOtc4plidCFm+ng8defmqWOOHi9TRkNwJr7ox
ePrlZwNoyvlu9Y3HleJRzreMUmehhE5v5MxI3EfT9lpUC7l8thvf0bSN6JyN
c43pnOXyJR5s2jpwyQd0znI5vbaKexaDDn/A0Ge9SOblG/mMo4uMZxWp09Rp
6q7Yw/nFNeq2+JNzv/hBv7yk1EbNjW8rgeQjKvEu5xb61Hng6aNrbHUSZPkE
B7Lcy9WYfEcgp7RVSF1g/EyFug+OtY+p/fJVC5L7Ig5jOfeVDTq8ssjcKmwq
e9ifcbuD5TTt9Fo/buR8Rsj4MxdWc35h2Bn4hvN7w04wrnGr26tzEVi/owdG
tFAngg67zv9aV6IDb2dmtZre3Di/2A+e7oWPPHiV874gZLmhMP6yTJ2K13m5
DEsdD542YaGtbmPcPvz5ZupsSO6yG5LfWavOheRTA2jF+fc8kNz8IGbx5YMB
nv62PY46FZIfHlLHQ5ZfF3YbLFrsbvX4wbCbGfd3Q3KX3KDDL7mF7s/GdE6c
p/uz5Knfi/MT+L9fT5dTP4bzdH82TjWm+7NxvLqvuo26N+r9kvj3XxMqsYTz
k6rVebid8y/41UnGnUog29kcC8k/6lNHGzcoVjdWp+Pldd9+882PbvBpHH2/
Rp2rLlQn4rWZO1fmhbz4ov/pU6fGx0JyKwPqaPD0TQ8E1Y2Ng+Xgaeb94AZP
86Bt4W1e7qIFWX6FbTzZBTr8M0NsR51hvL8cSTRd3861mMX5CRYemzLlpifo
+bOU85ttY3r+FOeW4RbOveIDT/cG3a/FccWQPN2vjdMhebpfH+TcrhpIju7X
xoWgw37zN7pf02F1bNbfC8nT/Xoq52huyZ1UJ5YijabtdD7sLCzg/L9h9zCm
+5FxR0ie7kfb3kv+2NW6JSRP9yPjRsZjyzCEt3t9PXU23lzz6bmnHq6DVbyd
w7WYyss964bk6f1sCH/8RwsTOfd80PhWF7bQ9Fv3OuoMHOM8/f0bJxj/VKFu
r+6LNzmX1kLdW90Q+Zy/rxqDOL/bjWacf8mP+Xz5eQvXcd4TxB7++L82HuL8
Msf47jLj7hW4K3/YK9WdLdxM0/0500Ju57XehCdt0OFv/HeHbdyszLikTJ0N
OvzRhS308816QvIzwp/vZHxdGTo169/jmUdbqrNxnvM9KhHk/Ae16jwc4Dy9
txknGdN72927ihfkPxuLiTRtF3pvM442pve2GTS9y12Jzrw8vd92oem9Lf1o
RtM/RO+34jkuY3q/Nc5AybGfWt18Qj8/J8H4Zro/0WlUfkXvGzRtqK0PvPs5
/6P3Dc41tiG53CB4+tb1HePNZZB8VAiyXLIFyd2vXl0MnvaD7SG4aPev9vZB
csfVbxSBp005G4IvoVm3X3/zYhPnL4Yg+b8COML5K+oJpcb3ufHJyVe63nTU
h2zOf2dBcmNsLOI8/T2Lz5TiM87T85VxlvE/5eoeuMD5KXr9mY7GV4tBvwy3
M6klpnCO3oeNG4Gnf+8GG7L9vHrGL5XiR97O6254Of+zT51rPKJYnYhomv5y
Ox8kF4g1XlCkjkYpTT/1J6+6sfHwIki+V31I7qAXko+JAk//+ekA6Je3/4VZ
kcajSsGnWftRBHja9MM+zKDTWzZUPbAYJe7Nm/2pEeBp97T2QS6/3w3JXW+r
c40fK1UnqrMglz9VDdnO4lp1gbqfug8+5Nz/vODp2+6Kw1CaNmlzALL7vlVI
5fzRoDrf+KZydbI6B7z72I+rQb+MdaVtPOoC8LRflgbUfYw/KoHkf4jD+5x/
ywc+vPH5VZB8yFbnG39bqk4GT5f8tw+naj/CE9STHL2PGBcYXy5V94HkrtFz
Neepd3bEhl+GTrPVMbjI+X6OuonxtnLk03Sd/3DjGk13mt5fPLzcZQvTOE/v
L+J7XcbZZQjQNOf4/57l4OLHrjaxjI8V4QvOP2LDbnxy8tZ/vLiN83R/EU8q
Mv6wHJI76sVCmva7cRZm3d/xyX/OBLCX85ts4zGlxjll6ix1Nnj37z5fC56+
w2e16n4Yzfn0AGQ7e1MguQVBdRfwtCfo+ce4NZI5T9//xk3Rhpen55+2u85N
/mN4A+N0N2T766JQxrk9FiT3ghtLaPoRP9nqXOPhZepEdTZk+dpYdU91tLoT
+DROl1RCtnOgkg87O6+FH3TYixZk+iHLXReE5NvT9x5f/pCD2Xz5445x3Qrj
JhW4m3bb6n6679P0/R+0jCNdWEvTr3zfhuTgw0HODXGMtxcZHy/HLs6f9ULy
ky3jcUXGF4txnnNHvLjGuUKf8Y1Fxu8VqdMwnfN/eCH5eTXYzvl/AupCHOfc
5SAujpnY5bjlxbic9DvOXnWMv4LxlAq8R9Nvepvem2j6+16y8B0vf4jemzj3
uW08gN6b0tfV/26Eg8m8/AEfdnA+PWQcLMb3nF8Qdjru5PyeEI7R9K/tr4Hk
fgq70Hi4G2N5OyNT1LlYxNtpXwPZzgIPRnSvk7xqpx8ZnB8eMC4rMf6pBIdm
Tq9642kf9nL+HR9+5+UrbEj+Rtt4Vylk+WQHdNi3Z573YWHmxcL0NiHj8cXG
8yrgoWkf7+gDT7/nNct4UZFxN5c6DQNo+rvcPkTTtPHLarCK811tdaHxq6WY
xdvzp6izwNOejK6BbOf1WvC0fT/yowNNW9UrYFxaYryCnrdp2lqarwFNO2eF
z7hFMR7ivG2r0433l6q74QRNb/0V/nw74wnFkPzTleBpA518kFxXPyTX1DZ+
1WX8RKk6Q52lTlD3AE87Y18VznK+RbU6X12gTsZUmja3ixfVdBolI+PQj/NP
BzAyc/ysiqQqvMzL7Qqq8/HFnm52+UlHnYzbaPr48SGs53zrOGTw8u+EHWPc
161ugr00bclnFuiX1cV6rD4k/7MNPo3XS6OMR5RBll9I7w+cb2epc7GX87Nt
yOVLPZB8mQOeZvHtAUguPmT8K92HXv1txqKnw87ETZyn5/ndPbusv+2eWkju
ZNj9wNOn0/M877ZmLJ0L5/9V/wEkcP5K2KnG9DxkHK/OVbdRJyJQMvLLC1Mr
8Rpv58lqdR4kv8SvTjKOL0Ev3s62WEh+hk8dbXxdMeJp+n+qKsHTF9bxYSZN
d5WeP3n6GyJtY3r+FN9Pz598+TAfePry4z48PSDj3cFp9NzMuXG28dpS47Ol
6ixI7op+fm0P4/uKIfnW1ejK+Rt86gK05Fwzep+naXbT39VMmnZ7A8d4MSB5
el41ToXk7g873jjSrW6jzlU3g+SneyDjfNkAdLh1CwHI9n6JUqdiCU1f+hL9
Xng73hp1rroQt/Ply+h7jJevpPvysT79L9DfT8b5FhcjXgsY09+PuFupOhOP
8/K7feru4OlfHmarO0CWT3NQ88e8xEsXWhivLVc3xG6a/tlRFvi0plyqC8lv
sPH15W6PFU6pY5xVhu94uWfc4Gnn0PPGRf74SQuSp+eNK/zx8zYkT88b4vFl
kBy9zxpnG79Soe6p7qvupO6Na3Q6he+0RFfO/68aKZzvXYmGnH/Bj2rON/JD
8rVBJPDl9YKQPL3fPcOXP+BAlvOH8Mliz0s3FoWwvUGPg1+8rn6/wrinW91X
navuDcnP8kDyk+n5j/NDA5D8i35I/q0gJE/vmZL/1kEZ52kfzTk/KoQlvBzt
4zpefoP66wrjLDd+/bq7c/ZtC3U4t9cyznAZ17jUGeoMXLqwOya/SS1kO61q
IfmoACRfNwDJ3x+E5B8IGkeWQ3LvO1juWX38dlh4dtQv0c8PCRlvLzY+XqFO
R7cOuR8lbLLU3YxzXOp26gzs4+0db65OUF+HW3k7H1fhNzq99uPqqvPB009f
4sZozrX1qnON50OdCFluqRdezvlijROK1NHqNHVjdVf04HyP+uq2eJbz0VFo
SqfVsVVz3MTLz3fjSzqN1MhKyMd/skCHO646wm883AW5PCKI1vlNcmb190Eu
n+7g+hfrd/wo0UbtWw2faIiQ8cpS8HR1Xw47yzjWre6BXpzbZak7IoamjThp
o74n6omhwZbGw8og+W6VkDzdbyTf0A/J0/1GLq8bhOTpfiN+qMx4Z7k6G6Me
uKXOU3da6p6Q/Ca9/qFOxvR8L/kPWqqzkcn5xErU0mmk0fO9cR6iOU/P97Kd
Tz1oxDl6vpflbgXq0bQ/0PO9cSokT8/3xvGQ5deF3QY87aKD9O/St6cyNLES
kjsddp7xKLc6SZ0Lya+uhmzneY+6ALKdGqj7qFMhuW/iMIy3469Rx6gL1U0g
y9P3L5/G2lP1jT8BylN733xwQpQ6Fa/On/vm6c2R6nhYvL2jEeo26EmntWVM
BOrRaSy9rxLR61o+d1N22HmQ7XWIAJ9Gz+88MPkI8Gk8OxaQy6e7EdFuRNaP
z3sxgD9+3AJPe35vwHiICzzdvz8F1RnGw8vVCeocdXt1L6ziXEoLdWd1Q0j+
p0pIfrcbku/rV+cav+OCLLfWYy4f4wMf1vxRAfB06dm2Mb3hiDeWqjPRl6bd
87sPfHgJ99ZCchNtyPKdA6DDy74rzzF+sQSS6xRSZyKDpj/yRAiSH1GLhZz/
OIR1vHw7en/l3A8hHJoQVf337CCG+99bcPicunE5JH8x7BzjyW51L4zm/DFL
3RmS/4PeD3i79VtB8pMcrOF8Cv374HxeSJ2HZZx/IewkBDj/WQjfNkk5mD4/
Fr0493PY0ZhL02/9k953Ip4peNBdCcn/G3ae8d1u5Gwf9vmQrzyQPO2vKV/+
vwAkT/sTXygxHlumzoTkO1ioS9MkTKmF5B+31f0wjvP0/VGHpnvmPXq/4hw9
rxp3MV5C90nOO1X4jPPLLXU+RnBun61ORgZNnz3SAf0yqi99Uo2FnM8MqQuw
l/MLw+4Dye8NQbbzYxwk91PYMcb0/ncrLz+oEkc5f9BS5xn3d6mT1Bn4nZd/
oxqynda16gKc4Xy9gLoPJnH+Af7fx6Hc/jjjOuV46f1X12zNraL38q2+dXSf
vC3l195rav14kpd/2UbG/Atzne5B7KLpE72O8bIynORcj5A623h5hbon7ub8
CkvdybiXC+15O1+3BE97f6VP3QiS72ajCW/v9nrGr5WCfjnnf3u7DvI5/6sP
D7oH3z1hQKTx7cX4gLe/KgKfd8i8PtDeB7n8YTd+4VwTG5X88RMWLtC0c+s7
xje7jB8pV2fgXc7dbKkTjE8Uq9ur0/EXTROztBKSv1ijzkNHzl/zq5PwBOen
BSHTfR1r/F8ZzHJVeJWm/7Cfpc433lasTsbr/V/+6mwf+v6g6VKaxBmvKVLH
qNPUTdRd8RNNf/svbsh25lapc9X56kR1Mt7ly1+oxgjOf1WtLsAAXu5tP0I0
zSvpXiTRtM6AoPE6GB8qU6dClsuy1PGoT9NWPm+r2xh3CH++mTobK+l0vjjY
QN0TB3h7p6PUnXDq7Q8y/vd3JGQ7X1ZiIp1O7uUILM+40nt0hh95vN0p6rdd
eDE4/5HPCiMgl4/2wdO72jXiBvXvRVgu+bDTsE/yEeDpy7bUwOHL6X4kuTN+
da7xmBK05stf9kByz/twPV/uBXj6QzU2PuTdPuuFLJ/gGEcXGS8tRyrv9iMv
JHe7BVn++wC+H3z7kqNv2+Dd4lwQ5zg3wIHkLjqgw74tOylkPJneKzj/HL2/
0WH1eNGC5D9Vd3ZBcj+GwIc1q9yH6a89PvFrer+WfDx9j3H+X/WSUmP6/jXO
Uueqe+BN3s6LHnVHhHg7HkC272uJ5zj/jBeSp+e5Ks7vDkDy9Dy3lPMng5DL
6Xnua17+vAO5nN5fRtL0+XeHjOtUYD3ntobd1zjfjbdp+mfhAU/f/XO6fzXw
5lfGApL/2VanGo8oU8fjCc63C3++Dco5Pzv8+WZ4lfN0f+jHuX/p9885uj80
59w1C7fTtC8+rZ7qMm7hVmdAcjssdQJ4+vTvbXV746FliKTTOLmsEpJva6nz
cIzztB/J/+rBWM7TfnCux/1X/gdjet41TsUimn4GPe8axxufK1a3wTLO5fsQ
/WTLXZ5JldhH06d2ttV5xi+Wgn4Z578+Su/1nP/ZB8mPofd6zt1lq1PB0/7Q
1wFPs3lgDSTXMaQuBE8/mZ5XZPkqL37i/MfqT2Fc7sarnFvrxT00/edfWsZp
RcY+lzpNnaHuCtlOdK26rbofKmP7HU16sBLPcn6oV03PE5x7KwDJH/fgR5p2
ybdB0GFvuXUcIMufdtSpxqMq1PHqvuo2kNxAj7oZePqPggHIdjY1MD5QAj6t
dkeikMH59T7QL2Nj4zORaM/5ATb4tOr/E4HHefkkB7Lde9WryiGXP+iG5O6w
1LnGp4rViep0yPJFsZjJ+Us16mh1oboxJD/Yi+W8++/dkNyagDrXuE8pfuPl
N9HzLi//qQ+829gx9Lzbd9aqv261jc+U4Dwvn+aoM3H3E0PvmNIupO5uvKAC
dPidd1ytguSXWup84wSXOlmdga28nalx+KXHhgPzGtZiE+3+SJ8q5HK+TkCd
j06cp/f+ee8XzLhcj99jKLfdMX6Y3mPeWv9eNb3vG6ca0/u+cby6r7oNLJq+
1WSPuhl4+rqDAtjD2/uggfGxEgzn7Z2IguQ3+pC+qcGd285GGmcXoz2d3uCL
Eep0NOHt3hd2N/DptKH700Ga9uzSKjx4b/N/rqf7E0+79XY/PpB8BCSXEYRc
Tvej1TT92IWOOte4fQXu48vpfjSKpn/+EQs38G5vC2ADTVfzIX3/8G7fDmIg
5252jDPKjU+U4yHebY2Fbzg/2UIxL7/UxmnOb7WNE8qM88sguYYWLtM0TZpZ
xjOLMZXzj9rqdOMG+vmZ3TCEc5EWJP9WFVJaTf767HRbnY/5nIejTsYezsWG
IPkD1RhO03Z+KgRZbr0f6ZzfFcKVh5t9sYOeSxZy7qSankvEw9zqbEienqeN
exrT8/T2s5ELQ3nVaMT5oE9dgHqc722jbSFa3dHdC8nHOMbLYDy3XJ0Kyd1q
qeNBhx+1dq1ev6wNJNc/fH0z8PQrE0M4x7mrbkie7uc8be1/FiT/qXqaC5L7
MewM41vd6gR1LprTdL9+XoVFvJ0FHnU+lnF+eECdjH2cXxdEHc4frMZIzh90
1AXI5PyoEHi3/fK8kOU3qLcAdPifpB0OO9V4oFsdD55+zwFL3Qbfc/4UvU+8
NfHSunsrcY7zExzUrHzh2unOfkg+N2T8ost4c4U6Q93XLNe9FrKdMR58RNOc
aRjAdTTtqoEB45klqMv5VUFIbrEPdTh/wIFM57NxP+fvCEGW70H3WV5+vXp5
uXGmG5IbaUFyey3j34qNa1zqdHWGuhtkO63ofezCiH9K3q2C5OsG1PnGD5Wo
k9WZkO0OilN3V8eoO0CWtyvxHOc2VeI3mvaeGD+Gcy7ZbzzXhXU0fcM2QXUG
BvDljznqBCTR9B+UhtTtjT+qwH80vfN6JT4ddXThuLcsdR6Gc+5bW52E9IEb
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
prapE9XJ6raQ7RbFqZtBtlOvHMOaFTvLdtZT50O2d7w2hnG+hg8/OeY80/Jc
Tazl5SYE0ZUvp9+3n3i5LWG1zRguNf99PyeuNvNZKOHLn6mALP9GSF2AVTR9
7WBE3Q/f0/Q1e0eRsNPd4PLOePzJ+eer3RoPcv6LajfBB5z7NYoWdFqPHY8x
/p8H8bT7xPUevMP5Hy21DVHO/xmCXL7SixWcfzCC/pa9cNTwIPZzPi9q/EcJ
hnP+lWpnIovzX1e7h3GVR91RbUP7XvFdN15oga8vd1307nNePEvTDexahjGc
vz0I3u3+egHYOP9u2Hiaw7i/S50ByVdY6iTjr+zqDup0SN7RQt1d3QBXOL+x
HK04/4UHkh8RwBS+/Bx9L3GOnmfFoxzG653qDNSoScv1tdRJmEDTnXghhGdm
H7ji+7ocwP96jC6PqPMRx7nuUXUKmvt+/PzAs1HsdI14vOed8cYtPerWapu6
Cepw/gkvePf8v4dI/lb6POLl+N/74/zqMNz88mshk/8hYvy40zjqVmdDln/B
UvcybuNQd4bkSv3otr5w7nsft0TvvJcGbksIqRtC8i0ieJZOb8AtdY2fceHz
lc1+XfFOLZOj73c+nf2Rmsb0/S7bf7uGOh2D+PIpHkj+ciW+55cfsSD56wHj
Wx2Q/PiwOsP4hlOdBC9Nv7PIwn90Gr2/KkdPXn5hSJ2PuRu7J5/zRtQp+IJz
PaIYR9O2viPe+HW3urU6V91E3QdFPP17MequWLzgQmje+x7sounHXylT29R5
6mTIdq574ef8TXHYxNsZD3WsOk3dGCMazLz67S2VGE3T7T/qwSCa9vz3AbzC
y12i+xZefnjYeKzD+A+nOkOdDd593y5VqOD8lSp1kboIa2maNrNTkcT5a6lY
+c62FZ8mVqIh54sq1YWQ/DcB/MvLl/ggy98ZNt4O49+cGMfLr/FBls+1jNOK
jTfa1f1Bh7d5XIpf3c14VTFWc25qOZzXf39n4R8+db7x8Or/noJnOUf302HO
767A50XXLoym+2njAkiO7qeN+4GnG0T3032+uil/6Ml4SI7up41bg6f9/uNq
N4HkDkVBh9/Cwf9+Ok3//ukoZLn/6PeN8xfVjzoAzv9X7Qws4vy1aicZP+5R
d8AbnD9kQXIFLfAd50+HsJKmO9iqDKc4/1BEnWd80YXhZ6e/dnG7F5J/3MJA
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
FLL8sEpI/ne/utD4LjvocNuEM1LxGU0f7uBXJxjPLwYd3rYnneU4R9M+f8IH
Jy/vD+Ay5/8JGu9xQHKXw3iWl6fPeZ5+79UIPLwcfc5LblzUeFOp8XW3Okud
C5726VVV2M358V51Ec5z/pYgZDvfpxofKlEnoIDz6/2gN2PPyZvKIfmBIXW+
8c+l6hRML16RceNfP2S7feONH7RDct3LMbR5n12bO/vV+cavFONdmvb9Oj7w
9Pf95sMAXm5SEJKn85Dl6PNfcnQeYvr85+n+ovMwzjF+zK3ujXiaNm+hpe4C
yX0TAp/OC3GtjL1OdSNIvpWFRn06DC6fU9f4OTum8nZ31oLku/nxCZ1Oy9vp
551zLUOQy2d6wNMW0ud5G375UQuSrxM1HuqA5CZVO8O4lgfOJcMbvNuuCuWc
22Kpi7CcpvccDmEJnc6Ap1LxLedHRtQJxmdc6jbqHHVTZPJ28r3YS6eZ7KwH
2U4X4C46jTZLaqvTINvfUxMnDn3dY6KrEnv58lkeXOH8ngDk5cfo+5WXHxaG
vPwsfb/S9GPXRozvp+9Xzt0UVWdjAi+/stq9sIWmnb2/2p1xmHN/REGH/enJ
DS0xkqZfQveX6zjfpwwbOH+l2nnGj3jUffE35w9aGEjT7Xg+Dg9x/nQIZrly
5HP+oYg6H69yPi+qTsE3nH8liqSdQ8cMahBv3Nmjbo3znNthqZvgCk3/0bEQ
Wt2eZlv1RIzxbU7E0zTd13ogefr8lJf/ZUHy9PkpL/83BB/nnRG8265zxP5o
BD05lxg1/s9lvIR+fmma3eMslHH+Dcv4uh3dOfddSJ0Onj7t7oi6u/Epl7q9
Ogf05pUNu9Fc3VtdH7KdwRVoz/kdHtDhz/K/GIBcftaC5MvDkJdfCkHyyyLG
Y52Q5ayoOtt4r1vdS50LPo2u/SrAp7FpjBeSo/sCN02bMjiIWX1eu3aM7guW
cn5V2JjuC/Zy/vuIOht3cX54VN3L+A+3ujPo8B/4fRPdL7X8qejmA2WQ3C8h
dZ7xYCfozZjd9qIXkm9L58uXPx7Ev5yfGTK+VmLcyIlymub+zX58zLla9POw
dvyHG24J4RBN98DEkPGhUpzhPCJoSNP+fdGPsZyLixo/ZEe+c/CmlDlR8PT/
0edgF87vVNPn4GzOHY+CDv/oOPoc3EnT1z2nvrPYeBQ953HuRx/6c/6AZTyg
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
OwpZbjN9H3L+orqoxPghjzpTbVP3UCerO9LzM21nVgWeHHd04LWFLdQF6gaQ
fJoPfDrXv6kDyc8LQrZ3Zy3jdqX8Zr59I70mJtH0eZ/5wadz46UaKKbpO98W
gtl+DcjyaRHQm3NhfJJ6jQs+vpy+L3j62+6xEMsvp+8Lya8LGQ9xGGc51Rng
aZ5qYuFTmqZVuypInj7/ZLcxQUiePv/EU0sgOfr8M84EHf6OH+jnX/K3VkHy
9PMvy7cLQnL0PDGSdpv6VBgjaNqO9DyxgXOfRbCe8/Q8MYgOq/Ft9Cfnr6qP
ubGK89ejiNBhfbLBwvecvxHFCs4dCOEezld7kBPrOP//zsZAzv+/exmP96g7
q234j7ezrwwR3s5CL27QdPdnBrCf8/S8In7fgT84T88rNTLo8nv9eJDz9Pso
/qvYeIAbNSqHtIv858NBXv4Fy/jRYuM2DoBzB30Yyzn6nBPfXIx8mv4b+pwz
7o8unG8RwW7Ov1iJ2ZyvH1UXYifnnohi/pbUVf9aPtxO0ydvi0JybwbRn3NH
1L1K0b7juaKZZ6qdBclfqnZPSJ7Ov2HjY3f3o/ssydP50+H/VE73We9y/oa6
ZokxnadxptoG2Q6qINuh8zQugmzHC/B0DYf50JTzz/mMTwLTOP95EDxdrU0+
lHD+eBiy/C/0PMHLn4sYDy7FMzR90cNRdRYk92G1e0JyB6vdyfhmD4YO+mvZ
hJSWkPz3FiSfQPcznP8jhFGcrx+A5B+IGE93GF9wqTPUOeokdW91B3UXbOR8
SQvI9h9ppW6gbgTZzuI6WMTb+dkDPq22/lpqG+jNWTSzZ00M4+XWebHio9jd
pXNrYC1fPhDYL9uvdhqG96s7pkX3GuhLp3EwXIl1vJ2WNTDzTI931u8L4GfJ
14CTl787jFv48gkeJNL0974fUduMM92Yx5cv8qIBL/+0hQq+3AfjJg51mjpD
nQjJ165St1UXqZuB3oz73p6YiuU8/Rv11AkI8PTf1Va3QW+e/lRNdVO05ukv
1ICMg3qYyJdP8wAPf7QyZpMH8nJ6Hvbxy/+2IC+n++We/PKLIWO6XxY/5FRn
4wuadndnff3IXvj1wroOJ2dVv76zcVMn+HQe2dDS5Oj+QfJ9ysDT/UL3D8Z5
kDzdPxj3Nd7ikuk+eT4OP/x896K8kRYSZbly/Mn5DSF1vnGOE3xYkVo+PDqw
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
UtRy/ICQeiCe5fgOEcg6W9yQ+OZRdbnxfId6ELj91jV+cNsO592QuC9D6nJj
X7V6kLoI4zpf+Gc+ff8b91N3gKzT361upS5HEa9H3//Gg9CNTu/olHhw+6rj
brSOr7huwnsN1OW4n9c7HAc6/FfWlXmxg07ju1vV7wA3HPlpwG9FcZBxdO45
vF5X9SArTHwc3qe2uz71wsTHQcYfD0Iun+YEtz97Nqy2gNvc9U9EnQmJuzcK
uZzuP+jwg9dujUK2pft5iTuspvt58XVOfMHb0v38WxxP9+Niup8X0/24cZ46
X91bnYF/afuU1S7IOnQ/blymLlNnqbMg8Xvd+JHj97sR5XGvB/APj9scMC6w
Gxfa1QXg9o8+5FP3MW5Vqe6qzkMmncasZW3xKp3GTR/U4ccp8Y51XWqRyXFn
AupS4/F29UA8wHErfJjI6z1Ivw/Hjw/oWh+CGefC0zy+T0RdZry2Rp2lLsb5
rqjc3TRV3R9TeXyqC/RmbPgh6FaXqcvVWepB2MbxiamQdU65Uczj01yQcW8F
0Dpl9YhZjgDoMOcErgkb77QZf1+NRjxuog8yrshvfNYKbvv88hAatLu5eu5F
L5a+Mqb4m7qI8b1W49016lycoPa3T/Krexn/WanurM4DHX66fXCiure6Ke67
6YP147a6IPHvOyHxtwYgl5/x41WOKwobj7chSm1PLI+A2/Yc6kMmj6uLGn9n
xWPU/p/nouC2Tc578Sm1vfdr9Z1WjOC4kzHnYiO1P/xXFBL/ZB0OcPy/9DzK
cT8FMJbjL6lH2o3vc6oL1BZ1H3Wmuitk3cEp4LZbNrbF/bxOE5e6GY5yvDWA
ZI7f7cQEjk8Jq+nzy+MWRtSZxokOPJT4z5E9I1LUJfS80vO7/fR7xqfR0+5R
098Px9HzqHGWMT2PNlvU5rcxCanqAnUHdR91K8g6/7rAp1U4MwHcZu4Ueu4/
NrN0uTXe+LINMn6ZE3T4bdZM9UFefsIPGVcRgrz8zxDo8Gf+3DNiPKnaeGWN
ukhdrO6n7g86zLxRWfR9RW0vBdzqcnU5Emnb3b29+Jfj+3uNnwXu4/hHg5jF
49Z7IeN2hY37WUGH/5fneESdi/HUdu3EKH7YM+KLofPrUMzj34x5MFZQ2/Xf
RcFtXT4v6nvarwR/U38JrOX481FI+01e7OX4/9T5VuN7nHhq96o3k3Z78TfH
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
xgVVxkurcJHH7/ahEcef8BnXVRqPqFTn4X1qO72LD+9x3Nd1kLiWIfVg4wer
cGTW29e8MjobEv+jT50GiZsQwgqOr6P71BsCLT4rjqjLjLfUqLPUxajfcvDv
ZRmp2Ebt87I86g4Yxut0AmbzeH8tOi+/athHs73qUjzI8duD6oH4iON/CIPe
jH3561NwI48/E1EnYQO1HTqZnpep7eJa+v3luHfo+ZjaPdMuAIk7RJ9PHteM
vpeobYvf1fOqIfHnYy5CPcf/F3M/rOX4S1FsoXb9c9wIcvzlmMuN6fnVeBC+
4Xj+3wd59zln7xNuSDz9vl7L494MQOLp+fsV2n7H0DAknp6/xd9VG7/twK88
rsgPiX+Z/l6WZTy6dDn9TnPcvpBx12rjSLW6SF2ErRz/Ef1O8zrf1Ksr1BW4
jk5n0o/ZkLi7veo0cPtr3g2qOxqXV6lbqwvxKtf5P57uPM7G+v3juH0dsox9
mxmMwRizG2e298w5s5zZznqfc2tRIVpUSEgUFbIvKcmSoggpKglJsqVSFEkI
qZRdKpWvftd1fa7z+6vH89G5P6/P9Tlnzrnv7+P36De8LiQ3uwpHePubaqrz
sZJzS9xoS9P/NtyrdmAmTf/HpiDu58tXeiD5YyFk8OUBQJa/GFbT9wlN33G0
re6MD3j5LTa60bSj7y/H7WM+WrPneMQ5xne41UmQ/Ld+zC/7fGZ2RiyiOH/O
UrcwfqBY3QifcL6tH2W83ZfqGL9UiNdo+qrKmuo0yPZfr67uCtne19Ug+XfK
IZdPdkPyQwNqh/F5pzoR12n6jMd9kOWdMcb/FqijcZOm/+KmVx1l/EQBFtJ0
bU+7sZ1zP3jVDuM76XmZl9/kwWXO0e+9XH47MIam/fNcEMdpt00WeLGVc/R7
LW5VgP40zf/+CaPPxW/Sd+7y4i3OjbfRnpc/HYQ9e8vgj7apBxRhLed+iDjT
+E63OkHtULdXJ2IWHfbwlGb4k7czvULdAHmcfzWAPbz91rXRifO+EM7w9mfU
wBzOrwpjxMrXY5OKq2MvLxe0kcOXT3PjzLrv3uq92oaHX37ajxE0fatD6gFO
fMC53yJOB09f9EfE8caPutVt1Q6s4lxKU8h2lnjU9dGf80OCCNLpLX+xlvEv
Lqy+79npvooa6gzIcvPcOMLbeawK8vIzfmTy8h2DxoOcxktd6nTs59xKHzJ2
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
p3YzlHF+UQA8vS+mDK9xvjIEydcLQPKvh42fdUKWC9hoyZcP8IGn/egN9ekC
0OG/+cM3EacaB90ort2yZOKmStDhn+tzyA8/5y4GIPnfLOOHXMb3F6sz8Dnn
2/oh+duq8DPnZ1rqfDzC+eIweLqdbyZjM+c62+o44+Wl6pbqvurGkO3c64Hk
/nBjHE2fcWtQ7UAe598MQXIfevAy5w+HIZf3B7ycf8BG4qwaw9cs8GIVL/8e
zU/THvosiG8OP7z6AH2epi/Hsd9+CuF+zl1Q31NiTJ+nHxOavD+2H90ncZ4+
T+LvCo3p89SXc5k+SJ4+T3S4od7tLEi+p2W8qMh4TREk/7MP33L+Nx9WcO4R
C+c596hl/HsR/lx0/7sbHWF1pvHmEnUCbtL0bz7kV7c3vlgIP53OhseaYTvn
sn3qBsZbCtCdt59TG8M4f9EL2c4bbmRx/q+g2oHFnPs3BLl8tQdVNO3x/9H9
BF9uwXh8KXh6D90vBmn60S/7jVsUGHdyqlNhLX/v0PESn7oLJN/ZUreG5JuG
ZZrgxDJIvp4NycUEILln1Muc4GnzdthYx5ff64PkTqnPFoCnnX3ZxtoFXwRq
/+OF5K+rxxYYj3HjHOdOeHEf50/48SdNi0tBSP6SZfxwESRP34fbhi7t8dX3
Pkg+28adnHvQguSXqC8UQfL7bbzIuX/p88G5X9SPFxoPcavT1A51V3Ui3uH8
W+V4n7czowIPcv6BANZxfnnA+JzTuLNLna7OwKKVDa796ajCWt5OaZU6X52P
/ZxbkozDnFuRjGt0Gv27VWIUnUab7pXItZa9/+2nAZyg6Yv3BSDLDwrhEi9/
Twg87aMbwhhD08+lf4pTS7GVl+9nI8jL03PUCV5+rZqeoy513prmPxxxunHI
rY7HDZp2Pn0fGbc1tpxYXePDD6vqNEU+5y2fur7xoQJYvP2na2EO5+n7m0/v
uYIaKOU8fX/LODHV0YVz9P0t48yphmY07Rr6/pbL6f6iPueetNUO8PSrP4o4
0TjfDVm+MEbtUEeDT+O32R51FCQ/MAjJx9aB5NeHILtf74bkj4TVDkh+qG0u
p+e1Mbz8Rhub+HJ6XhNnunGRDvtZ+vtbyrkv/Mb09/clTb/nZ0udajy4WN0F
6ZxvE3l9a+OFhfjL0abLzgZNMJPz8T51PUiuuYUjnN/uBh12p0X1w2oH5nG+
lq1OhJtzT9k4P2hOk553xYCnT/s44mhI7mTEUeDpK+jvlQ7Xrk7PI5Knv9d9
vNx1PyR/g+7P+eU3LEj+pnpcMST/X8R9IPn/d3dI/v/dAZIn8/TJ25oZP+lW
N1A7wNO3vrO2OhFRzQbUnvFWDazh7cym32te7nn6HuE8/T3Ky3+i7xHO+0LG
9ziNDxSr03GTl0v3q+PxH02f/5KlbmvcthiSS22q7qOuD3B+dxWacv5TN+Zw
PiWodhivd6kTMYimv3etDzzdvkEx2MD5kKWOxne8fM+wOsp4TQnWTrhixdP7
Ibn7/WoH6PBLBr5nqRONM4pBb1aP54bHqPuoozGEpre/qFJH4SXOpwUh28uq
Y/yOCy05374m4q93mnmI9juRl3/RDcnTfo0dxoeL1InqTMjyFTGoTdO/9F6V
Olqdr47CKc6N8mJ3eOGMgafp+Zem7bcliKu8HH3eJH88ZDzGCVn+YlhN7x9N
98BoG7z7+I5VkOW3RJyPagftL44et/F2aps9Owd6Ue2+tYMvXLRhc259EBM4
/5c6pQjg/L8RZyKG8/+zEeLcjCrM4fzNiPONn3CjJ02TszsZKzj/g18dB8nT
75dxS+OHi5HG2xlaBsm386uzTZ7u34x7QfJ0/ya5NysgObp/M841pvs3497q
vpDc4Vh1T6TOmrrniKMc/Tg/skKdo85VJ0HySV5IvkOs8TqoW+ABXm5N5N83
Mu5ZAD6tjbPqYBFNf3YfvZ8pV1rfVlIT+3n5n4KQ7S2vjiEXLvbZfDWEEby9
A9XwLk1/x99h9I3vOPDcverHStG++ez1j6ZXw5s8/VI/FvLlE92Q3JeW2mHs
KVYnYiPnm/shyyMG33N+qqWOxkXOu8LYxbt3lWE05+JsdTa20rQ5cyPuZdzU
DZnu1Ri1Qx2NS5x/xqOm35ePDjzfrRCQ6X11cILzc7yQ7SXUNG5SgEG8/EI3
rnN+p1ftMHZF/n2iOhWpvDz9Pd2k06g3t1Idje2cOxNQRxkPcqEN5+PrqDMg
+eY1MYzz/arApzF/anV1PuTyGW7MouniHvCqHSjh3HtBrOPLl3uwgqbdezSE
b/lyH4xvLVGnqLPUnfHrvuaxG1p61K0guYZQ3wKe7vBTXpy/N2bfzlV1jWsU
gHdf/KEbkt/uVTuQyMufDKoT8QJN1+tyCCt4e/1jjIeVqKPVWeoodQ8c5Hzv
OuqOqEvTjqXff8n/Uoan+OXn/ZB83wAK+OV/WpB8+5DxqGLjxcVocs+Ab6Z3
8COaps3q5jdeUmi8shCuha3/GNDNh6Jn19be390HydHvuOSiLePnikCHP/GR
BmF1JiRf21YnQHL0ey75ZhXg3Vd9HHGucYFb3VvtAB1uq+ypsaDDXxyY41G3
gOQHBdWNjM+4QId7xH3eDcl/4FM7IPnbLUzj5bd4IMsnhcHT7nwoCJ42ppVt
fNFlvKAUPP36LT7w9Htf8xtnF0JyBy11Gnj6EfeF1V2Nfy0BvRldRq0sx22c
H+tX5yCJ8x9a6iS04lz/MPy8vUAsomja8t62ugXqcH6BDVneKkNNzn8WcTae
4txPEffCxzQ9/+83dPhHlqyOMR7hhlmuHJI/5scMmjZYFIDkL1rYXTVg9Oq4
ECRPzysDebm5YUienlc28HKlNiS/RL231LiDGzxNjw1+ODi3x2+c6jQucarT
1enqeHW8ui1kO3vLIdtt01SdA9lO0zK04FwbrzrbeCHUvdQpmM/be5Z+z3n5
wZXqaPD0c78LqKMgyw8Noex8lTXIVQc8/aCNYXTl7cTVNM4shWxnbnXI8jP9
+I4vp+8fOvxZn++21A5IbmBYnWj8Ywnk8rkVkPwYvzoXkt9qgQ6/c2qqFxWc
o8+DeAPw+oLs1Hb0eTBOwdecXxBxZ+NWbnUrtQO8+86Pl+EPzk/yYPW0GXv3
dgxA8ncHjZc6jU+51OmQ/CafOt44q1DdFp/z8o19sIqKBw3yNMXPNH3Dupa6
Ph7hXM0wenJ+nxubO79zZUd1G9P58qt+HOfcBBvF/PK/6TmDph+23UZn2v3K
cTQ3506qb5QY3+VWZ6kd6h7oyNt5kf6uXcV/zr+zAqWcHxxU56IL598JqXsb
p5VAtvdWrDpL3QKf8naiPJDlby0DHX77ZGcQU2ec7/5RywAk90rI+AWncWyJ
Oh2SL/VDlutaBVl+haXOx1Gavo0/DHrvf/p2XjIe5Fx3Wx1n/EapuqW6r7qx
uif4NB9w11V3Ap/meytqgk9n8jfNIbklbsh2csvUDnU2PuXLV3rwGG/nSzo/
vjwAyHJDgO8CT/T6db4XPP1vC73G0QVoTdP+8XlQnWpcUQQ63HLHpEpM5uW/
9iGPdlt1KoBPaPql91nGd7twmnPpYXWG8bsl6m7g3ac96Fe3M75QiCDnNpZB
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
Oa86zrh5ASRfWg7J7/SqcyDLnw6qk8DT518JgU/nkS6xkNz1MCTXpRySG0f3
P+N6vdzZHQBP322b+lOncZ5bna52QJZPrQKfxtTZHnU+JD8wCMktTIbk14fU
cZA8/V4Zt8S7nKfPl3FjY/p8jefcNTcu0LSdtvjVDkiO3m/jRPD0e+j93vbC
l3MHjY0xvliijlZnqenvn7eT7YFsN7cOjnCuKoi3Od+xpvF+F45c7TuvYnZ1
dQYW8OX0fDeKt/NIFX7ml9Pz3Qlevn3QeKDTeLEL/7R3v77H9iGLcyt9GD+r
y9cDEy0spumXBCzjtUXGXxepM9WZ6gR1grq9uj3ySub9mhJqhn/oNPp+UYaR
nKf7Nzr80VVpAXW28TtOdS8s48uH+iDLraiAl6a7L9NCl0+vte75RgAJeaN+
SW9H7w9N+3wwhGia9qVGNtypubvLVocxjXOTbchylo1dNO3gT+j9q5i9ft5q
+l3i3Cl1Dzd4+u8uR+yA5K/T9Zyf5oHk6e+Hp/HT7ax4nFudAsn/4Fd3Nr7T
CdnOveXYy/mwT51j/G2BOkmdCtlueqy6CyQfX47veDsvlatzwNNvGxxQJ0Fy
aSH8xvnmsThB07+1MKxuYdymVN1I3Rd/0Gm+OrUOxtBpPFDswV7b3aLyXTeW
cs4XVDuMD7jUieoMDOL8rTE4y9sZWaWOVuer6fmOppnxkBepnO9Vx/gi0Ibz
LWuCDj9j+RYv+vHyL9LvBC9/PKh2GN9RpE5UZ0KWr4hBBucWVKmjwdMd7xpU
R0Fy80Kgwz0w4LQbPO3oT8NqB45yfpCtTsSDvPwGer97vHRvyvAY41S3OhqS
+9wP3n3zkjI0vjNtczndj66+99VdO5sGMIXzdD8qy9ULYSfn+9rGzxYbf1Cq
7qPuq+6u7qnuAMmProDkdzZT56obqHuDTydrQG3Idi5W4D7ezhq6r+HltgTU
Dgyl6Y/dEVInIpOmv7guDLn8+Qos4uXCtjrX+NtSTKNp19Lz7RCa/vh7fhRN
n9o5tDCIdM4dtYzbFKEtTT/6wbA60/hCCXgaa3IVJP+4X51v/G8heJoenySr
03BrRfv1+5IrcZDzNysh+c/pe4Pz/wWMK1yQ/JMhdYbxf8Xqbuo+6nbg0/jz
vyrI9l5vqs5X14fk/0vGbjqdqK9rqeMwkLd7Xw11S6TydtOrqxtjIZ3W3S9V
w1Y6zf89WRdm+9UQT9P/t8UNufwpN/bxyy/6IS8/6cc9/PK/LOO76HuDpv3o
8bA63fjfEnW8OkvdFnwal/I8kFxyU/C0oztBXR+babrjU7yYZd/zYvyLtYzr
FoBPo3lFDUj+Yy+68PTx1Y0LCiCXT3Vj6wP//TD+Ky/k5afp94RzZ4PGA5y4
xLlrIfBhPUe/J2No2lv+CRsfKcBWzo230fOT9I+7/OlFf5r+6W3qUQXG9Pv9
GeeOe3GEplv2JT2v0253XgxiKOd/sZDGub9C2Mh5+vsSjy7B95ynvy/jLFzk
/GIbjTjfwYO/OL/fBh/++cYwrnJjwEt3NdvytBc3adqXv/Yb1yzAf5z/1YLk
t3tR7STlR4aNUYBqlynvsNWpqDaG8ksi7mLcwa1urXbgfs4/U4ZqJyg/xaPO
xgTO3x1U9zI+5UIGnU7dHTGQ/CafOto4q1AdpU6DbP/uOuqu4NOcmFwTW+k0
Gq+k+2rezovV1Tng04r5vJo6CXfz5ZPduM75byrUDjzBy70XUCcaZ7ggl9P9
fwxNVzXTp841blSo7o16NG2gpg/x67ObDN4ba/x0gboFCjl30qtuhFe+/HXY
/ZeDoDevXtqZOsbDilBGp9NmRE11JmT5RW7Qm7G47eIqtUOdr06EbGd/MmT5
Snr+4nxapTpanaeOwle8fLEXJyYmOx+i34uzNG3W8iDG8HLX/RjJyx8IIYdf
fsOCg5c/GzYeV4wljVfWGTLSxi202+ad/JDlN6tfLsTKT974uM3xiNPwDU0/
42LEXfEb5/+KuI3xaDfq7Yj6YOqXTdQOdT3Iduj5SfK73ZA8PT8ZO4x/cakT
1RmQy1+swE7ezmNV6lx1vro3TvP2tibjxdg+V9r8XgE+jezelepcdZ66N2Q7
rZKRdiY+b+DNCkiudqU6F6t5+Y8DmHxs55DP8704xMvfFTL+CMYni9Up6j6I
4+UfroTkrlep80CHv79hXhCyfCU9Z3Du5ZDxFwAd/u9PfRkGT/PkO17s4PwQ
2zitAKd4+XdsPHQ67ecfPveCDrf/5e9syPI/ByG58+rBdD9M0437M+JM41Fu
VI3bfWPRwipI/rgf0S+n/Dc4nn8fKX/RMn7dZfxQMXbRdAvf8GEm59v5jbsX
QvIzLXUaJF8cVnfFQc51ttVt8CtNv2Uu3dfy9uc3Meb/+yNxPbUDst0y+v7n
/DMefEXTB151Q/L0/ZPOLz/rh+TfDhnf60QO5+l5aObffdK63urDUs7T8xBP
26yXhS95+Y3qN4twlqav933EmbjGuQs2Unn6NVUY+/GQPjv+jDjfmM5vIW/n
UDIkT+dnHGd8h1PdEq05T/fTxo2N6X76f5z70406nP/DC1n+f348zfl/gpjA
L79pYQfn/hfC9oXdD9z/ZBinaPotN8M4SdO+l29Dck/axh+Vgqdf95GNLJr+
wlt+SO4HdW+n8Z1udbraoY5XJ2IIb2dXOb7i7UyvwEucHx7Au5x/NWB8xWkc
51Kn4wLnn/Wp4yHLuSx1W9Dhn+sdF8YXvN0xTXGCpm/VlO7fpob+nd6qDA9z
7tmIs5FF0xfttMGncXoX3Tdw7rSN5/ny4UHMoumbXrFR9u7RO7duCqGE89fV
WSXGY9zqLDTj/Am/uodxfyckV1IBydP7Jbm5AUi+p2Xc1AXJtwirMyD5BjZk
O64qSG6SDTrM/u2b0v0ATb91h3quC5I7FXGG8d1uSH5QFS5y/ohfnW9sO0Fv
xvTOG5KxlfMhnzrO+HCBuiXe4jx9nowb4wjn6fN0mLfbry7Oc44+Tw88eeX0
s2trGo8vgeSWuOmflLvTj//45b/4cZOmX/uWZTzEady7GNtp2sP9fJhA059r
6MddW7PiztHz+HbOT7KQTNM92jKMuzhfGEbr3rP2OhraSOZcrG08vRStm771
9rY5Efc1buLGbtr9/gEeFHNupx9Xabfv2EF0pmlbnbaMj7jQjPPDw+oM4ysl
kO2MqoLkx/khy3cIQvLbLOMlLuO8Yszg3EofePpnb/FjN027PmBB8lMs46+L
IHlnWJ0JydE8I+g0zr9bBZ7++pyI841pnr68naPJagckn1kJydP3WxfOfxGA
zXn6fmvGyw8OIZHz9P0m/pmeEzhP32+yfF8/GnKevt9k+cUWJvPyG9Xti/EJ
Tc/fb8Z9MIBzFyLujvXbmnTi7zfjDpD8vzbozct+cFYz48fdkHxCGSRPfz/G
2ZD8JUvdC39yfnQYstxrFfiX89m2OhdPcH5JxL3xEefpfnfJrqpFy69V4C7O
/WJDlvswgGSanv/7wOJcl/EjbtxK05fN9iGK88f8xrcUGt/uVKep09Vd1fGg
wy/59ZVyxPF2PivHwJVf+MbeG4DkRwSMzzohub4hfHffI/M7jvWBp/9gcdj4
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
rlJHq/PVURjGuUe9eOds1kOLT9O+aPq3NgfVDrTn/PEQevHymzyYxctfDIN3
2/2hIPbQ9NZo2/iiC4N4+S0RZxhnu9Xd0O+HhK2/7fer2xlXOfEr57bR8znn
Az41PZ9zvrulpudzztP7xbs/9j49n3Oe3i86rOi/3gzgCc7R+3Vm0/Bp/4ZC
+Mg35tCSHerDxTjJOXq/+vJyGX4Mo+lXXla/V2g8zK1OQ3vO0/M5T//whUrM
4vxFC2do97f9G0AJ50eHjR93Gf9Vos5QZ6m7qXuo26k7QnLv0+8d5y+VqbPV
2WjP+QseyHb+pfeBpv9zFCCXPxHEGZr+wyVe8PSPfxQy7lAAnv7DH8LqVPD0
Jx621V0gy78fcWvQ4W/663sbI+i0TjRuYnybW10Pa2n6/x32o++u8Q88XLcW
Qpw/Z6EHTZO9zI01nH80DHn5WT8Oc95hG9/rxDnOL4k4HaM4v98GT1uzbRW2
cO6XiPONh7gh0w704hLn6flB/CMwhvP0/GCcghzOjwqDp/lqTCWWcj7bxhO0
2/QTAXg4v0Td32Xcwa3OUDtw8uj31WeGqxDk/BSPOh89jv375jtO4Haa9sr9
Xkh+jhfrOPdeEJLfG8S3NN3Wo3Tfy/kzIeNbSyDLXw2rs4xHlKp7qPuqO0Ly
t3tw4cKE3Wt+KgNPHxsOqrMh+TUhdS+M4/yhMPg0Dl2NwTbO32+ro41/KwVP
28tThsvv72/8wWY6T5rus+YBXOfcccv4OSdu0LTrHgqr040vlmA0L9elCk9y
/nG/Oh/bOf+hhRw6ncfmJRvnFqvjMIyme/QWv7olNnF+SuT1jY3rFqMjnWaO
uy7Wca463V/TdO7NbnxL0/81wVI7cJ7zCKsTjbeXQLZzRwyyadqOw/zqaOPL
heoodRokn1QHX3L+RiUk36qmOg+y/ItuHOX8nV5c5Zf/7McFzr0VNB7sNO5d
pE5XZ2LrrUtXTG9TBclNr1Lnq+n7+LPnRqbQ55sOv+YTw71Yy7n1Qbho+o82
BXGYdvv5kRDiOH8sZGyXYC4vT9/HG2m3aSE/6LBPtqLvY/HhQsjyWyJOAx3+
9V3HI+5qfIdb3UbtwG28vXNN1InqepDtTK9AkufgrhmP1lLngqddu9yNw5yn
+w15Of39n+P8i0Fj+vsfxct9HlKnY0vdG6eTfg4j4dcBux3093+Cpm/1iK3O
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
BZ4uabQH/w8ouLdl
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 99.64124775021502}, {0., 99.99991771400369}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.400335707695887*^9, 3.40033572593656*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Exerc\[IAcute]cio", "Section",
 CellChangeTimes->{{3.4347896779015217`*^9, 3.434789680378471*^9}}],

Cell[TextData[{
 "Os primos de Mersemme possuema forma: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"p", " "}]], "-", "1"}], ",", " ", 
    RowBox[{"onde", " ", "p", " ", "\[EAcute]", " ", 
     RowBox[{"primo", "."}]}]}], TraditionalForm]]],
 "\n\n"
}], "Text",
 CellChangeTimes->{{3.4347896824960623`*^9, 3.4347897994516983`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Desenvolva um programa que expresse um n\[UAcute]mero em uma base \
bin\[AAcute]ria. N\[ATilde]o vale usar uma fun\[CCedilla]\[ATilde]o  do \
Mathematica.\
\>", "Item",
 CellChangeTimes->{{3.4347898025989037`*^9, 3.434789872603177*^9}}],

Cell["\<\
Escreva exemplos de n\[UAcute]meros  primos de Merseme na base 2\
\>", "Item",
 CellChangeTimes->{{3.4347898025989037`*^9, 3.4347899108296213`*^9}}],

Cell["\<\
Determine o menor valor de p tal que o primo de Merseme correspondente n\
\[ATilde]o seja primo. 
\
\>", "Item",
 CellChangeTimes->{{3.4347898025989037`*^9, 3.434789944186448*^9}}]
}, Open  ]],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Exerc\[IAcute]cio", "Section",
 CellChangeTimes->{{3.4347899801086903`*^9, 3.434789993130563*^9}}],

Cell[TextData[{
 "Com base no c\[OAcute]digo acima desenhe o tri\[AHat]ngulo de Sierspinski \
girado de ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["180", "o"], "."}], TraditionalForm]]],
 "\n\nGera uma variante do triangulo de Sierspinsky, chamado Quadrado de .... \
(Coloque seu nome na elipse)\n"
}], "Text",
 CellChangeTimes->{{3.434790009037633*^9, 3.43479009139008*^9}, {
  3.548509548721932*^9, 3.548509609056185*^9}}],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Working",
PrintingStyleEnvironment->"SlideShow",
WindowSize->{919, 686},
WindowMargins->{{Automatic, 338}, {113, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "LastSlide"->{
  Cell[90750, 3333, 150, 2, 119, "Section",
   CellTags->"LastSlide"]},
 "SlideShowHeader"->{
  Cell[29968, 1056, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[37884, 1456, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[38344, 1474, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[45253, 1673, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[55406, 2040, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[64928, 2380, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[71218, 2602, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[79595, 2932, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[80156, 2951, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[82087, 3022, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[83577, 3079, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[91331, 3356, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[91420, 3361, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[97259, 3588, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[112281, 3874, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[112370, 3879, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[229316, 5892, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[231364, 5960, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"LastSlide", 233395, 6020},
 {"SlideShowHeader", 233489, 6023}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[1805, 59, 125, 1, 137, "Title"],
Cell[1933, 62, 91, 5, 52, "Author"],
Cell[CellGroupData[{
Cell[2049, 71, 226, 3, 43, "Item"],
Cell[2278, 76, 206, 3, 43, "Item"],
Cell[2487, 81, 241, 3, 43, "Item"],
Cell[2731, 86, 240, 3, 43, "Item"],
Cell[2974, 91, 307, 4, 43, "Item"],
Cell[3284, 97, 267, 4, 43, "Item"],
Cell[3554, 103, 312, 6, 43, "Item"],
Cell[3869, 111, 320, 7, 70, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4238, 124, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[5498, 163, 35, 0, 119, "Section"],
Cell[5536, 165, 385, 9, 135, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5970, 180, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[7230, 219, 31, 0, 119, "Section"],
Cell[7264, 221, 528, 15, 223, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7841, 242, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[9101, 281, 29, 0, 119, "Section"],
Cell[9133, 283, 463, 11, 251, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9645, 300, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[10905, 339, 103, 1, 119, "Section"],
Cell[CellGroupData[{
Cell[11033, 344, 366, 9, 94, "Input"],
Cell[11402, 355, 213, 5, 66, "Output"],
Cell[11618, 362, 31, 0, 43, "Output"],
Cell[11652, 364, 434, 13, 69, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12147, 384, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[13407, 423, 110, 1, 119, "Section"],
Cell[13520, 426, 329, 11, 77, "Text"],
Cell[CellGroupData[{
Cell[13874, 441, 309, 9, 144, "Input"],
Cell[14186, 452, 50, 1, 43, "Output"],
Cell[14239, 455, 28, 0, 43, "Output"]
}, Open  ]],
Cell[14282, 458, 269, 7, 119, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14600, 471, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[15860, 510, 120, 1, 119, "Section"],
Cell[15983, 513, 121, 3, 39, "BilateralCell"],
Cell[CellGroupData[{
Cell[16129, 520, 54, 1, 43, "Input"],
Cell[16186, 523, 55, 1, 43, "Output"]
}, Open  ]],
Cell[16256, 527, 43, 3, 76, "Text"],
Cell[CellGroupData[{
Cell[16324, 534, 59, 1, 43, "Input"],
Cell[16386, 537, 55, 1, 43, "Output"]
}, Open  ]],
Cell[16456, 541, 47, 3, 76, "Text"],
Cell[CellGroupData[{
Cell[16528, 548, 60, 1, 43, "Input"],
Cell[16591, 551, 55, 1, 43, "Output"]
}, Open  ]],
Cell[16661, 555, 48, 0, 46, "Text"],
Cell[CellGroupData[{
Cell[16734, 559, 59, 1, 43, "Input"],
Cell[16796, 562, 78, 2, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16935, 571, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[18195, 610, 120, 1, 119, "Section"],
Cell[18318, 613, 160, 3, 46, "Text"],
Cell[18481, 618, 122, 4, 44, "Input"],
Cell[CellGroupData[{
Cell[18628, 626, 54, 1, 43, "Input"],
Cell[18685, 629, 28, 0, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18750, 634, 54, 1, 43, "Input"],
Cell[18807, 637, 50, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18894, 643, 111, 3, 43, "Input"],
Cell[19008, 648, 83, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19128, 655, 65, 1, 43, "Input"],
Cell[19196, 658, 61, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19294, 664, 96, 2, 43, "Input"],
Cell[19393, 668, 218, 8, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19672, 683, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[20932, 722, 52, 0, 119, "Section"],
Cell[20987, 724, 597, 13, 164, "Text"],
Cell[21587, 739, 481, 15, 94, "Input"],
Cell[CellGroupData[{
Cell[22093, 758, 237, 4, 119, "Input"],
Cell[22333, 764, 65, 1, 45, "Output"],
Cell[22401, 767, 44, 0, 43, "Output"],
Cell[22448, 769, 60, 1, 43, "Output"],
Cell[22511, 772, 59, 1, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22631, 780, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[23891, 819, 48, 0, 119, "Section"],
Cell[23942, 821, 209, 7, 44, "Input"],
Cell[CellGroupData[{
Cell[24176, 832, 135, 3, 69, "Input"],
Cell[24314, 837, 57, 1, 43, "Output"],
Cell[24374, 840, 76, 2, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24511, 849, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[25771, 888, 32, 0, 119, "Section"],
Cell[25806, 890, 391, 8, 135, "Text"],
Cell[CellGroupData[{
Cell[26222, 902, 204, 7, 43, "Input"],
Cell[26429, 911, 84, 2, 43, "Output"]
}, Open  ]],
Cell[26528, 916, 143, 5, 43, "Input"],
Cell[CellGroupData[{
Cell[26696, 925, 50, 1, 43, "Input"],
Cell[26749, 928, 74, 2, 45, "Output"]
}, Open  ]],
Cell[26838, 933, 204, 7, 43, "Input"],
Cell[CellGroupData[{
Cell[27067, 944, 77, 2, 43, "Input"],
Cell[27147, 948, 108, 3, 45, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27316, 958, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[28576, 997, 114, 1, 119, "Section"],
Cell[28693, 1000, 166, 5, 44, "Input"],
Cell[CellGroupData[{
Cell[28884, 1009, 125, 4, 43, "Input"],
Cell[29012, 1015, 98, 3, 45, "Output"]
}, Open  ]],
Cell[29125, 1021, 228, 5, 105, "Text"],
Cell[CellGroupData[{
Cell[29378, 1030, 315, 9, 94, "Input"],
Cell[29696, 1041, 110, 3, 49, "Output"],
Cell[29809, 1046, 98, 3, 45, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29968, 1056, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[30057, 1061, 102, 1, 119, "Section"],
Cell[30162, 1064, 542, 15, 78, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30753, 1085, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[32013, 1124, 123, 1, 119, "Section"],
Cell[32139, 1127, 481, 14, 94, "Input"],
Cell[CellGroupData[{
Cell[32645, 1145, 283, 8, 43, "Input"],
Cell[32931, 1155, 4892, 294, 279, 3888, 275, "GraphicsData", "PostScript", \
"Graphics"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37884, 1456, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[37973, 1461, 103, 1, 119, "Section"],
Cell[38079, 1464, 216, 4, 76, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38344, 1474, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[38433, 1479, 125, 1, 119, "Section"],
Cell[38561, 1482, 497, 9, 164, "Text"],
Cell[39061, 1493, 854, 25, 144, "Input"],
Cell[CellGroupData[{
Cell[39940, 1522, 955, 25, 119, "Input"],
Cell[40898, 1549, 129, 2, 30, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41064, 1556, 1351, 36, 194, "Input"],
Cell[42418, 1594, 224, 3, 30, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42679, 1602, 1500, 39, 244, "Input"],
Cell[44182, 1643, 226, 3, 30, "Print"]
}, Open  ]],
Cell[44423, 1649, 781, 18, 37, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45253, 1673, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[45342, 1678, 104, 1, 119, "Section"],
Cell[45449, 1681, 529, 11, 223, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46015, 1697, 124, 1, 119, "Section"],
Cell[46142, 1700, 594, 11, 194, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46785, 1717, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[48045, 1756, 33, 0, 119, "Section"],
Cell[CellGroupData[{
Cell[48103, 1760, 392, 11, 94, "Input"],
Cell[48498, 1773, 170, 5, 43, "Output"],
Cell[48671, 1780, 170, 5, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48878, 1790, 177, 6, 43, "Input"],
Cell[49058, 1798, 407, 12, 69, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49526, 1817, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[50786, 1856, 34, 0, 119, "Section"],
Cell[CellGroupData[{
Cell[50845, 1860, 253, 8, 69, "Input"],
Cell[51101, 1870, 88, 2, 43, "Output"],
Cell[51192, 1874, 88, 2, 43, "Output"]
}, Open  ]],
Cell[51295, 1879, 288, 7, 135, "Text"],
Cell[CellGroupData[{
Cell[51608, 1890, 265, 7, 69, "Input"],
Cell[51876, 1899, 216, 8, 43, "Output"],
Cell[52095, 1909, 213, 8, 43, "Output"]
}, Open  ]],
Cell[52323, 1920, 49, 3, 76, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52421, 1929, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[53681, 1968, 66, 0, 119, "Section"],
Cell[CellGroupData[{
Cell[53772, 1972, 266, 9, 43, "Input"],
Cell[54041, 1983, 166, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54244, 1993, 586, 19, 69, "Input"],
Cell[54833, 2014, 34, 0, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54904, 2019, 392, 12, 43, "Input"],
Cell[55299, 2033, 46, 0, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55406, 2040, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[55495, 2045, 102, 1, 119, "Section"],
Cell[55600, 2048, 799, 14, 282, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56448, 2068, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[57708, 2107, 43, 0, 119, "Section"],
Cell[57754, 2109, 212, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[57991, 2119, 901, 27, 144, "Input"],
Cell[58895, 2148, 534, 19, 43, "Output"],
Cell[59432, 2169, 732, 25, 69, "Output"],
Cell[60167, 2196, 876, 29, 69, "Output"],
Cell[61046, 2227, 598, 21, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61705, 2255, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[62965, 2294, 146, 7, 120, "Section"],
Cell[CellGroupData[{
Cell[63136, 2305, 96, 2, 43, "Input"],
Cell[63235, 2309, 434, 15, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63706, 2329, 145, 4, 43, "Input"],
Cell[63854, 2335, 323, 11, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64214, 2351, 354, 11, 43, "Input"],
Cell[64571, 2364, 296, 9, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64928, 2380, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[65017, 2385, 104, 1, 119, "Section"],
Cell[65124, 2388, 562, 13, 107, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65735, 2407, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[66995, 2446, 50, 0, 119, "Section"],
Cell[67048, 2448, 331, 8, 105, "Text"],
Cell[CellGroupData[{
Cell[67404, 2460, 497, 11, 144, "Input"],
Cell[67904, 2473, 403, 14, 43, "Output"],
Cell[68310, 2489, 160, 4, 43, "Output"],
Cell[68473, 2495, 274, 8, 43, "Output"],
Cell[68750, 2505, 199, 6, 43, "Output"],
Cell[68952, 2513, 364, 12, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69353, 2530, 446, 13, 94, "Input"],
Cell[69802, 2545, 168, 5, 43, "Output"],
Cell[69973, 2552, 142, 4, 43, "Output"]
}, Open  ]],
Cell[70130, 2559, 48, 0, 46, "Text"],
Cell[CellGroupData[{
Cell[70203, 2563, 683, 20, 169, "Input"],
Cell[70889, 2585, 117, 3, 43, "Output"],
Cell[71009, 2590, 117, 3, 43, "Output"],
Cell[71129, 2595, 28, 0, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71218, 2602, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[71307, 2607, 105, 1, 119, "Section"],
Cell[71415, 2610, 222, 6, 43, "Input"],
Cell[71640, 2618, 1127, 37, 119, "Input"],
Cell[CellGroupData[{
Cell[72792, 2659, 342, 9, 69, "Input"],
Cell[73137, 2670, 271, 8, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73469, 2685, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[74707, 2722, 89, 1, 69, "Input"],
Cell[CellGroupData[{
Cell[74821, 2727, 42, 0, 119, "Section"],
Cell[74866, 2729, 619, 12, 311, "Text"],
Cell[CellGroupData[{
Cell[75510, 2745, 136, 4, 43, "Input"],
Cell[75649, 2751, 83, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75769, 2758, 187, 6, 43, "Input"],
Cell[75959, 2766, 132, 4, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76128, 2775, 267, 9, 43, "Input"],
Cell[76398, 2786, 132, 4, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76567, 2795, 309, 10, 44, "Input"],
Cell[76879, 2807, 152, 4, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77068, 2816, 308, 10, 44, "Input"],
Cell[77379, 2828, 152, 4, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77568, 2837, 367, 13, 44, "Input"],
Cell[77938, 2852, 73, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78048, 2859, 162, 5, 44, "Input"],
Cell[78213, 2866, 78, 2, 43, "Output"]
}, Open  ]],
Cell[78306, 2871, 244, 8, 43, "Input"],
Cell[CellGroupData[{
Cell[78575, 2883, 238, 7, 44, "Input"],
Cell[78816, 2892, 186, 8, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79039, 2905, 228, 7, 44, "Input"],
Cell[79270, 2914, 264, 11, 79, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79595, 2932, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[79684, 2937, 179, 2, 119, "Section"],
Cell[79866, 2941, 241, 4, 76, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80156, 2951, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[80245, 2956, 129, 1, 119, "Section"],
Cell[80377, 2959, 312, 8, 76, "Text"],
Cell[CellGroupData[{
Cell[80714, 2971, 460, 14, 44, "Input"],
Cell[81177, 2987, 194, 4, 43, "Output"]
}, Open  ]],
Cell[81386, 2994, 94, 1, 43, "Input"],
Cell[CellGroupData[{
Cell[81505, 2999, 393, 12, 44, "Input"],
Cell[81901, 3013, 125, 2, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82087, 3022, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[82176, 3027, 129, 1, 119, "Section"],
Cell[82308, 3030, 217, 5, 105, "Text"],
Cell[CellGroupData[{
Cell[82550, 3039, 276, 7, 69, "Input"],
Cell[82829, 3048, 188, 5, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83054, 3058, 271, 7, 69, "Input"],
Cell[83328, 3067, 188, 5, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83577, 3079, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[83666, 3084, 105, 1, 119, "Section"],
Cell[CellGroupData[{
Cell[83796, 3089, 540, 15, 69, "Input"],
Cell[84339, 3106, 188, 5, 43, "Output"]
}, Open  ]],
Cell[84542, 3114, 781, 18, 37, "PreviousNext"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85360, 3137, 101, 1, 119, "Section"],
Cell[CellGroupData[{
Cell[85486, 3142, 90, 2, 43, "Input"],
Cell[85579, 3146, 112, 3, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85728, 3154, 94, 2, 43, "Input"],
Cell[85825, 3158, 271, 8, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86133, 3171, 149, 4, 43, "Input"],
Cell[86285, 3177, 193, 7, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86515, 3189, 274, 8, 43, "Input"],
Cell[86792, 3199, 70, 1, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86923, 3207, 1235, 35, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[88183, 3246, 145, 3, 119, "Section"],
Cell[88331, 3251, 213, 7, 69, "Input"],
Cell[88547, 3260, 396, 12, 69, "Input"],
Cell[88946, 3274, 313, 8, 119, "Input"],
Cell[89262, 3284, 148, 3, 69, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89459, 3293, 1266, 36, 74, "SlideShowNavigationBar"],
Cell[CellGroupData[{
Cell[90750, 3333, 150, 2, 119, "Section",
 CellTags->"LastSlide"],
Cell[90903, 3337, 401, 15, 400, "Text"]
}, Open  ]]
}, Open  ]],
Cell[91331, 3356, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[91420, 3361, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[91509, 3366, 97, 1, 119, "Section"],
Cell[CellGroupData[{
Cell[91631, 3371, 632, 18, 94, "Input"],
Cell[92266, 3391, 4148, 170, 269, "Output"]
}, Open  ]],
Cell[96429, 3564, 781, 18, 37, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97259, 3588, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[97348, 3593, 100, 1, 119, "Section"],
Cell[97451, 3596, 441, 12, 69, "Input"],
Cell[CellGroupData[{
Cell[97917, 3612, 431, 12, 69, "Input"],
Cell[98351, 3626, 6447, 106, 894, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104835, 3737, 195, 4, 69, "Input"],
Cell[105033, 3743, 6425, 106, 894, "Output"]
}, Open  ]],
Cell[111473, 3852, 781, 18, 37, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[112281, 3874, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[112370, 3879, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[112459, 3884, 113, 4, 171, "Section"],
Cell[112575, 3890, 398, 8, 164, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113010, 3903, 110, 1, 119, "Section"],
Cell[CellGroupData[{
Cell[113145, 3908, 140, 3, 43, "Item"],
Cell[113288, 3913, 145, 3, 43, "Item"],
Cell[113436, 3918, 181, 5, 70, "Item"]
}, Open  ]],
Cell[113632, 3926, 781, 18, 37, "PreviousNext"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114450, 3949, 101, 1, 119, "Section"],
Cell[114554, 3952, 781, 18, 37, "PreviousNext"],
Cell[CellGroupData[{
Cell[115360, 3974, 2227, 73, 269, "Input"],
Cell[117590, 4049, 111665, 1836, 359, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229316, 5892, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[229405, 5897, 104, 1, 119, "Section"],
Cell[229512, 5900, 382, 12, 107, "Text"],
Cell[CellGroupData[{
Cell[229919, 5916, 246, 5, 70, "Item"],
Cell[230168, 5923, 158, 3, 43, "Item"],
Cell[230329, 5928, 190, 5, 96, "Item"]
}, Open  ]],
Cell[230534, 5936, 781, 18, 37, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231364, 5960, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[231453, 5965, 104, 1, 119, "Section"],
Cell[231560, 5968, 441, 11, 165, "Text"],
Cell[232004, 5981, 781, 18, 37, "PreviousNext"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
